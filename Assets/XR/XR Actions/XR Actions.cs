//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/XR/XR Actions/XR Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @XRActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @XRActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""XR Actions"",
    ""maps"": [
        {
            ""name"": ""Head"",
            ""id"": ""09ff3ccc-21b4-4346-a3a2-7c978b5af892"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""1a9029f8-7a46-46b9-9eff-e9ae8365f611"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""aed87fe6-2b01-4dd2-a8fa-195578fd8158"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cff1f981-6e1f-4e2c-a90c-715a0ea2e80e"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2017383-a3f6-4c46-acb1-012b8eece9cc"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Left Hand"",
            ""id"": ""5fe596f9-1b7b-49b7-80a7-3b5195caf74d"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""83a7af0b-87e3-42c3-a909-95fbf8091e4f"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""cb6b7130-2bac-4ef7-abe4-6991ae7d419d"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""d20fc51c-7916-43a7-8b03-706049966aea"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""664a62b0-e178-421d-b3f8-014eec01591d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""33db2a2d-5a4c-4214-950b-df6d45b45503"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip Value"",
                    ""type"": ""Value"",
                    ""id"": ""ec586e7a-a58f-4292-baf4-7c56c881ece6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""079878eb-1e09-44b9-800a-1c9aa0159338"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger Value"",
                    ""type"": ""Value"",
                    ""id"": ""1f4f177f-74d8-486a-8968-3f989cd1c94b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger Touched"",
                    ""type"": ""Button"",
                    ""id"": ""7e13299e-48f9-4c57-a2c0-8f5de45c7ae9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stick"",
                    ""type"": ""Value"",
                    ""id"": ""b2431e5c-d1c8-4a27-a54e-bd5371632c74"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Stick Clicked"",
                    ""type"": ""Button"",
                    ""id"": ""1f2e10a6-1f5c-412b-a1e6-aa4bfe40ef44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stick Touched"",
                    ""type"": ""Button"",
                    ""id"": ""1546d3b2-a825-482a-beba-ccf9ebe2017e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button In"",
                    ""type"": ""Button"",
                    ""id"": ""40182eed-f606-4c61-a8c0-c23f54634b5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button In Touched"",
                    ""type"": ""Button"",
                    ""id"": ""5126304d-a857-4fee-be34-afc35aff0b4f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button Out"",
                    ""type"": ""Button"",
                    ""id"": ""5c236e11-7a69-41f8-bc9d-f8a34fe6e93b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button Out Touched"",
                    ""type"": ""Button"",
                    ""id"": ""9cc62aca-b835-498f-b6ea-be0ba0beddd2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""013a3708-5d93-43e0-a44b-cbe29f6b9da6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""61466a56-4ee4-47b1-aa6a-4806de1de5f2"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""afdcfbff-e241-4fdd-a6d1-23b0bf273360"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""ed03d944-4c09-4c38-8b68-5c844e18ca7c"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""c98fc8c8-7fc6-4909-89b6-c5b7568e7275"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""14aeff85-d719-43ff-a124-b1cd7ca8686d"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""abf752ec-feee-4d51-b530-f0870f48acc9"",
                    ""path"": ""<XRController>{LeftHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""6580b669-0651-401c-9779-85ef22689130"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""ae101942-9eaa-4c53-a388-cafc3fd89bdf"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""acdf9550-5529-4ff7-8558-73ecdf0d75bd"",
                    ""path"": ""<XRController>{LeftHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97a0351f-659b-482a-8fa0-19015ccd055e"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71e2669b-b941-4c11-80d4-bc5b4f3c89b0"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad36be4b-d121-44a6-b6b6-45b18f70d211"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd207696-830b-4a20-90e3-b34c0fde7205"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6003a104-e677-40d7-9a37-b4e7b570ed31"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8efc6ba7-2528-40b2-a93a-3e402b1a1ffa"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b7f3056-51be-4692-88e8-c50edb8644d8"",
                    ""path"": ""<OculusTouchController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button In"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4033c70-0c37-440d-bf27-6871fadc7d62"",
                    ""path"": ""<OculusTouchController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8bbc8c8-47a3-495f-9e78-93f832fde66e"",
                    ""path"": ""<OculusTouchController>{LeftHand}/triggerTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger Touched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bdf2539-c813-4946-a0bc-dff924dee8b2"",
                    ""path"": ""<OculusTouchController>{LeftHand}/primaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button In Touched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22fff9cf-cde0-4988-a155-62f8ef7c0ca0"",
                    ""path"": ""<OculusTouchController>{LeftHand}/secondaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Out Touched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d189a59-452b-42a3-8de2-aa1bf818c466"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstickTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stick Touched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db3ca699-4417-4323-aeec-600bf1b94a77"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stick Clicked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""117c0cba-cfcb-48cb-ae83-9d5c079616af"",
                    ""path"": ""<OculusTouchController>{LeftHand}/menu"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Right Hand"",
            ""id"": ""7960f8ef-2bf3-4281-aecc-4c03809d6c8c"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""c4990d70-7b8a-4ce1-b03c-da86716b8352"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""ee6bf5bf-bb0a-4a50-8327-cb654b19e298"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""167ea203-5bfb-4d74-bde9-8026b7483102"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""57b2a1b4-3290-46d6-ac07-4854ee8f91b1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""dba27f3f-683f-4a93-99c9-2e21007061f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip Value"",
                    ""type"": ""Value"",
                    ""id"": ""013ed617-0319-4529-b980-8657e6f60643"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""ae66ff9c-36dc-4a8f-b74b-1a7d7c4bf3d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger Value"",
                    ""type"": ""Value"",
                    ""id"": ""ba03557a-54e4-47db-a939-94bf7c6cb398"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger Touched"",
                    ""type"": ""Button"",
                    ""id"": ""1dc67298-a132-4125-b2c5-3312611363dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stick"",
                    ""type"": ""Value"",
                    ""id"": ""4f9f5e64-e783-4fd6-9b88-09a279104094"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Stick Clicked"",
                    ""type"": ""Button"",
                    ""id"": ""c045346d-a50c-4338-924a-cbd38c5c1a47"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stick Touched"",
                    ""type"": ""Button"",
                    ""id"": ""f6f92303-9abd-42c6-aee9-5c87ad093210"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button In"",
                    ""type"": ""Button"",
                    ""id"": ""c62028c0-7642-4608-955c-de876df9f431"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button In Touched"",
                    ""type"": ""Button"",
                    ""id"": ""ebfe752b-a556-452d-b01e-5d0a7cb9e66a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button Out"",
                    ""type"": ""Button"",
                    ""id"": ""fe795a45-ffa5-4cef-8875-3f4b800863d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Button Out Touched"",
                    ""type"": ""Button"",
                    ""id"": ""73ea7715-8792-49f0-8958-7db6d1a35b80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""59c81ccf-2fac-40c9-a2f4-d17ffca96194"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""84e51e1c-1b95-4f3e-a61f-29da6c1f0816"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""3722d501-eb80-4f61-9361-08a5ea7a1394"",
                    ""path"": ""<XRController>{RightHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""2e6ad191-d5aa-4919-aac6-295c83387a72"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""b9ecb60d-341e-47cf-b50a-41d5815af8b0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""74e968f1-ad08-4a82-a68d-764517faecef"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""9717e367-64a4-440a-9974-1e641d753eb2"",
                    ""path"": ""<XRController>{RightHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""0794a41d-29ef-48ec-a452-6b7de29b52fa"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""3ef0a781-60c5-48bc-a584-f95553f8ae0a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6011e1e6-b2dd-4cb1-8da5-29b03868f2c5"",
                    ""path"": ""<XRController>{RightHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03ccbaec-eeca-4fc4-8281-ee1758b4eb9b"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""431c93af-05a3-4e7b-bb6b-23a3f813eb28"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa8ca769-241b-4e93-9aba-f7ee4d6c730e"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63ff03c2-b16b-4fb3-b280-e6f817553e94"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebcba1e4-4fff-4e84-830d-d0a813e9931d"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a822e69-634d-49a0-a57b-eea2b9cb342c"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14e2e5aa-15db-4aaa-adfe-031d01b2ec8c"",
                    ""path"": ""<OculusTouchController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dacbf424-ee2e-4ef7-8299-78ece2ee06d2"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button In"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93f63cab-77bc-4f2f-a429-429c5e11566f"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstickTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stick Touched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""098c6f78-73e0-4d20-835e-aa7be48897d3"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button In Touched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00c1a5ce-d7eb-4dd7-8226-7336c717c741"",
                    ""path"": ""<OculusTouchController>{RightHand}/secondaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Button Out Touched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ff3de92-36ad-4d0a-8b38-50e862d9a967"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stick Clicked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2198f5dc-5b56-4926-98a9-15831b03d5e7"",
                    ""path"": ""<OculusTouchController>{RightHand}/triggerTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger Touched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fd5acc5-7052-40c8-ba72-379a8de98b37"",
                    ""path"": ""<OculusTouchController>{RightHand}/menu"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI UI"",
            ""id"": ""edd65a7c-601c-4915-8307-025a081d8790"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c9a92aca-49d5-4910-8ade-8e994f0a31f0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""eba98c2e-6268-4233-bb88-946287bc753c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""448b396b-0885-4543-ac5a-8b3405da6791"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""682022c0-857a-4332-8753-7f8fcdf84d37"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b194cd98-7e4f-457a-a60c-cebc25dc32a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bd7fc534-75e3-489d-94fb-3d45cb78d8f3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cc5f5666-a75c-4dfc-8566-ded8ec9b4ae3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""533aeb95-18b2-4a83-a69d-f6e0be72ff8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e87fa299-8441-4620-89dd-0564c7d552e2"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""445a013e-9c17-48a2-9856-067e4826df03"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05c1e38e-79dd-41cb-95d5-74f42e65d92f"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57909bb4-1088-4975-9227-ecc87a305257"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2740386d-d4b6-4342-903c-d9390783f04a"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6fd3bb5-c747-4eba-b599-1c6d7c738e2a"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb2286cc-fa20-4564-bff6-9f790f12cf6b"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54eb7da2-546a-4d75-bfcc-ae38be303a59"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""4c9a5170-d325-45ee-8ef9-fc12d1f5a97e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c846c708-b27e-4ac9-9a83-c80ac5c263d5"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""caf2fb01-3e95-47c1-8663-315057149d48"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""830d65e9-887d-45b4-8386-562deb29e465"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e5c71442-9909-46d8-aa56-8fa3574a8227"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""210246e8-c3c4-4edc-be9c-1916858346df"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fb701ef0-9910-4639-80d1-2c1c03f871ed"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3de9f409-fb44-4311-8705-b4f4e7cd3029"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bd001ba1-d6a2-4a97-9c87-36b5b92728af"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fcc0a2cd-a126-43ad-bb1e-ffc1ae7668c7"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""65cbb13a-6e00-4973-9887-e49e06575091"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3c5803e2-42d0-4d48-bbd6-41ce4442df0b"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d5b1219c-0df6-4bc5-ad11-205b748cade4"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""065d2394-f10a-46df-b6cb-2c56a6c842ea"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""29921809-7785-44a1-a316-e96307174552"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""49817cc8-fecc-406d-a187-6393de317e95"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ef33431d-17d0-4e1c-90f2-bbaa2ef9a8b7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5ddfdce2-0f11-4f4e-8931-0ae6fb289ac7"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5ceab4e0-1600-4bfb-acf6-8d02c4e10aea"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""94e10d8b-5bfa-439d-afae-b975efac2b7b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9fc7d14a-385d-4ca5-b185-906e049b7eed"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d7e5e0c4-05dc-4f2f-8649-a66fe843caed"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""76ab9656-e168-4b2c-9a6b-d8d6da981e4f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ad7bc5b3-6ada-42a2-9cba-5c7334cba7be"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9f2a7c29-a588-4b6a-a966-955eb408c526"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67f51768-1493-4444-b118-82d398a16fdd"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""198e6869-709e-448d-96d4-27186c9d56e6"",
                    ""path"": ""<Touchscreen>/touch*/click"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Generic XR Controller"",
            ""bindingGroup"": ""Generic XR Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<WMRHMD>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Continuous Move"",
            ""bindingGroup"": ""Continuous Move"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Noncontinuous Move"",
            ""bindingGroup"": ""Noncontinuous Move"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Head
        m_Head = asset.FindActionMap("Head", throwIfNotFound: true);
        m_Head_Position = m_Head.FindAction("Position", throwIfNotFound: true);
        m_Head_Rotation = m_Head.FindAction("Rotation", throwIfNotFound: true);
        // Left Hand
        m_LeftHand = asset.FindActionMap("Left Hand", throwIfNotFound: true);
        m_LeftHand_Position = m_LeftHand.FindAction("Position", throwIfNotFound: true);
        m_LeftHand_Rotation = m_LeftHand.FindAction("Rotation", throwIfNotFound: true);
        m_LeftHand_TrackingState = m_LeftHand.FindAction("Tracking State", throwIfNotFound: true);
        m_LeftHand_HapticDevice = m_LeftHand.FindAction("Haptic Device", throwIfNotFound: true);
        m_LeftHand_Grip = m_LeftHand.FindAction("Grip", throwIfNotFound: true);
        m_LeftHand_GripValue = m_LeftHand.FindAction("Grip Value", throwIfNotFound: true);
        m_LeftHand_Trigger = m_LeftHand.FindAction("Trigger", throwIfNotFound: true);
        m_LeftHand_TriggerValue = m_LeftHand.FindAction("Trigger Value", throwIfNotFound: true);
        m_LeftHand_TriggerTouched = m_LeftHand.FindAction("Trigger Touched", throwIfNotFound: true);
        m_LeftHand_Stick = m_LeftHand.FindAction("Stick", throwIfNotFound: true);
        m_LeftHand_StickClicked = m_LeftHand.FindAction("Stick Clicked", throwIfNotFound: true);
        m_LeftHand_StickTouched = m_LeftHand.FindAction("Stick Touched", throwIfNotFound: true);
        m_LeftHand_ButtonIn = m_LeftHand.FindAction("Button In", throwIfNotFound: true);
        m_LeftHand_ButtonInTouched = m_LeftHand.FindAction("Button In Touched", throwIfNotFound: true);
        m_LeftHand_ButtonOut = m_LeftHand.FindAction("Button Out", throwIfNotFound: true);
        m_LeftHand_ButtonOutTouched = m_LeftHand.FindAction("Button Out Touched", throwIfNotFound: true);
        m_LeftHand_Menu = m_LeftHand.FindAction("Menu", throwIfNotFound: true);
        // Right Hand
        m_RightHand = asset.FindActionMap("Right Hand", throwIfNotFound: true);
        m_RightHand_Position = m_RightHand.FindAction("Position", throwIfNotFound: true);
        m_RightHand_Rotation = m_RightHand.FindAction("Rotation", throwIfNotFound: true);
        m_RightHand_TrackingState = m_RightHand.FindAction("Tracking State", throwIfNotFound: true);
        m_RightHand_HapticDevice = m_RightHand.FindAction("Haptic Device", throwIfNotFound: true);
        m_RightHand_Grip = m_RightHand.FindAction("Grip", throwIfNotFound: true);
        m_RightHand_GripValue = m_RightHand.FindAction("Grip Value", throwIfNotFound: true);
        m_RightHand_Trigger = m_RightHand.FindAction("Trigger", throwIfNotFound: true);
        m_RightHand_TriggerValue = m_RightHand.FindAction("Trigger Value", throwIfNotFound: true);
        m_RightHand_TriggerTouched = m_RightHand.FindAction("Trigger Touched", throwIfNotFound: true);
        m_RightHand_Stick = m_RightHand.FindAction("Stick", throwIfNotFound: true);
        m_RightHand_StickClicked = m_RightHand.FindAction("Stick Clicked", throwIfNotFound: true);
        m_RightHand_StickTouched = m_RightHand.FindAction("Stick Touched", throwIfNotFound: true);
        m_RightHand_ButtonIn = m_RightHand.FindAction("Button In", throwIfNotFound: true);
        m_RightHand_ButtonInTouched = m_RightHand.FindAction("Button In Touched", throwIfNotFound: true);
        m_RightHand_ButtonOut = m_RightHand.FindAction("Button Out", throwIfNotFound: true);
        m_RightHand_ButtonOutTouched = m_RightHand.FindAction("Button Out Touched", throwIfNotFound: true);
        m_RightHand_Menu = m_RightHand.FindAction("Menu", throwIfNotFound: true);
        // XRI UI
        m_XRIUI = asset.FindActionMap("XRI UI", throwIfNotFound: true);
        m_XRIUI_Navigate = m_XRIUI.FindAction("Navigate", throwIfNotFound: true);
        m_XRIUI_Submit = m_XRIUI.FindAction("Submit", throwIfNotFound: true);
        m_XRIUI_Cancel = m_XRIUI.FindAction("Cancel", throwIfNotFound: true);
        m_XRIUI_Point = m_XRIUI.FindAction("Point", throwIfNotFound: true);
        m_XRIUI_Click = m_XRIUI.FindAction("Click", throwIfNotFound: true);
        m_XRIUI_ScrollWheel = m_XRIUI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_XRIUI_MiddleClick = m_XRIUI.FindAction("MiddleClick", throwIfNotFound: true);
        m_XRIUI_RightClick = m_XRIUI.FindAction("RightClick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Head
    private readonly InputActionMap m_Head;
    private IHeadActions m_HeadActionsCallbackInterface;
    private readonly InputAction m_Head_Position;
    private readonly InputAction m_Head_Rotation;
    public struct HeadActions
    {
        private @XRActions m_Wrapper;
        public HeadActions(@XRActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_Head_Position;
        public InputAction @Rotation => m_Wrapper.m_Head_Rotation;
        public InputActionMap Get() { return m_Wrapper.m_Head; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HeadActions set) { return set.Get(); }
        public void SetCallbacks(IHeadActions instance)
        {
            if (m_Wrapper.m_HeadActionsCallbackInterface != null)
            {
                @Position.started -= m_Wrapper.m_HeadActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_HeadActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_HeadActionsCallbackInterface.OnPosition;
                @Rotation.started -= m_Wrapper.m_HeadActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_HeadActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_HeadActionsCallbackInterface.OnRotation;
            }
            m_Wrapper.m_HeadActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
            }
        }
    }
    public HeadActions @Head => new HeadActions(this);

    // Left Hand
    private readonly InputActionMap m_LeftHand;
    private ILeftHandActions m_LeftHandActionsCallbackInterface;
    private readonly InputAction m_LeftHand_Position;
    private readonly InputAction m_LeftHand_Rotation;
    private readonly InputAction m_LeftHand_TrackingState;
    private readonly InputAction m_LeftHand_HapticDevice;
    private readonly InputAction m_LeftHand_Grip;
    private readonly InputAction m_LeftHand_GripValue;
    private readonly InputAction m_LeftHand_Trigger;
    private readonly InputAction m_LeftHand_TriggerValue;
    private readonly InputAction m_LeftHand_TriggerTouched;
    private readonly InputAction m_LeftHand_Stick;
    private readonly InputAction m_LeftHand_StickClicked;
    private readonly InputAction m_LeftHand_StickTouched;
    private readonly InputAction m_LeftHand_ButtonIn;
    private readonly InputAction m_LeftHand_ButtonInTouched;
    private readonly InputAction m_LeftHand_ButtonOut;
    private readonly InputAction m_LeftHand_ButtonOutTouched;
    private readonly InputAction m_LeftHand_Menu;
    public struct LeftHandActions
    {
        private @XRActions m_Wrapper;
        public LeftHandActions(@XRActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_LeftHand_Position;
        public InputAction @Rotation => m_Wrapper.m_LeftHand_Rotation;
        public InputAction @TrackingState => m_Wrapper.m_LeftHand_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_LeftHand_HapticDevice;
        public InputAction @Grip => m_Wrapper.m_LeftHand_Grip;
        public InputAction @GripValue => m_Wrapper.m_LeftHand_GripValue;
        public InputAction @Trigger => m_Wrapper.m_LeftHand_Trigger;
        public InputAction @TriggerValue => m_Wrapper.m_LeftHand_TriggerValue;
        public InputAction @TriggerTouched => m_Wrapper.m_LeftHand_TriggerTouched;
        public InputAction @Stick => m_Wrapper.m_LeftHand_Stick;
        public InputAction @StickClicked => m_Wrapper.m_LeftHand_StickClicked;
        public InputAction @StickTouched => m_Wrapper.m_LeftHand_StickTouched;
        public InputAction @ButtonIn => m_Wrapper.m_LeftHand_ButtonIn;
        public InputAction @ButtonInTouched => m_Wrapper.m_LeftHand_ButtonInTouched;
        public InputAction @ButtonOut => m_Wrapper.m_LeftHand_ButtonOut;
        public InputAction @ButtonOutTouched => m_Wrapper.m_LeftHand_ButtonOutTouched;
        public InputAction @Menu => m_Wrapper.m_LeftHand_Menu;
        public InputActionMap Get() { return m_Wrapper.m_LeftHand; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LeftHandActions set) { return set.Get(); }
        public void SetCallbacks(ILeftHandActions instance)
        {
            if (m_Wrapper.m_LeftHandActionsCallbackInterface != null)
            {
                @Position.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnPosition;
                @Rotation.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnRotation;
                @TrackingState.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTrackingState;
                @TrackingState.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTrackingState;
                @TrackingState.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTrackingState;
                @HapticDevice.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnHapticDevice;
                @HapticDevice.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnHapticDevice;
                @HapticDevice.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnHapticDevice;
                @Grip.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGrip;
                @Grip.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGrip;
                @Grip.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGrip;
                @GripValue.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGripValue;
                @GripValue.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGripValue;
                @GripValue.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGripValue;
                @Trigger.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTrigger;
                @Trigger.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTrigger;
                @Trigger.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTrigger;
                @TriggerValue.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerValue;
                @TriggerValue.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerValue;
                @TriggerValue.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerValue;
                @TriggerTouched.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerTouched;
                @TriggerTouched.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerTouched;
                @TriggerTouched.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerTouched;
                @Stick.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStick;
                @Stick.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStick;
                @Stick.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStick;
                @StickClicked.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStickClicked;
                @StickClicked.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStickClicked;
                @StickClicked.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStickClicked;
                @StickTouched.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStickTouched;
                @StickTouched.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStickTouched;
                @StickTouched.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnStickTouched;
                @ButtonIn.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonIn;
                @ButtonIn.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonIn;
                @ButtonIn.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonIn;
                @ButtonInTouched.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonInTouched;
                @ButtonInTouched.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonInTouched;
                @ButtonInTouched.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonInTouched;
                @ButtonOut.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonOut;
                @ButtonOut.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonOut;
                @ButtonOut.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonOut;
                @ButtonOutTouched.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonOutTouched;
                @ButtonOutTouched.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonOutTouched;
                @ButtonOutTouched.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnButtonOutTouched;
                @Menu.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnMenu;
            }
            m_Wrapper.m_LeftHandActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @HapticDevice.started += instance.OnHapticDevice;
                @HapticDevice.performed += instance.OnHapticDevice;
                @HapticDevice.canceled += instance.OnHapticDevice;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @GripValue.started += instance.OnGripValue;
                @GripValue.performed += instance.OnGripValue;
                @GripValue.canceled += instance.OnGripValue;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @TriggerValue.started += instance.OnTriggerValue;
                @TriggerValue.performed += instance.OnTriggerValue;
                @TriggerValue.canceled += instance.OnTriggerValue;
                @TriggerTouched.started += instance.OnTriggerTouched;
                @TriggerTouched.performed += instance.OnTriggerTouched;
                @TriggerTouched.canceled += instance.OnTriggerTouched;
                @Stick.started += instance.OnStick;
                @Stick.performed += instance.OnStick;
                @Stick.canceled += instance.OnStick;
                @StickClicked.started += instance.OnStickClicked;
                @StickClicked.performed += instance.OnStickClicked;
                @StickClicked.canceled += instance.OnStickClicked;
                @StickTouched.started += instance.OnStickTouched;
                @StickTouched.performed += instance.OnStickTouched;
                @StickTouched.canceled += instance.OnStickTouched;
                @ButtonIn.started += instance.OnButtonIn;
                @ButtonIn.performed += instance.OnButtonIn;
                @ButtonIn.canceled += instance.OnButtonIn;
                @ButtonInTouched.started += instance.OnButtonInTouched;
                @ButtonInTouched.performed += instance.OnButtonInTouched;
                @ButtonInTouched.canceled += instance.OnButtonInTouched;
                @ButtonOut.started += instance.OnButtonOut;
                @ButtonOut.performed += instance.OnButtonOut;
                @ButtonOut.canceled += instance.OnButtonOut;
                @ButtonOutTouched.started += instance.OnButtonOutTouched;
                @ButtonOutTouched.performed += instance.OnButtonOutTouched;
                @ButtonOutTouched.canceled += instance.OnButtonOutTouched;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
            }
        }
    }
    public LeftHandActions @LeftHand => new LeftHandActions(this);

    // Right Hand
    private readonly InputActionMap m_RightHand;
    private IRightHandActions m_RightHandActionsCallbackInterface;
    private readonly InputAction m_RightHand_Position;
    private readonly InputAction m_RightHand_Rotation;
    private readonly InputAction m_RightHand_TrackingState;
    private readonly InputAction m_RightHand_HapticDevice;
    private readonly InputAction m_RightHand_Grip;
    private readonly InputAction m_RightHand_GripValue;
    private readonly InputAction m_RightHand_Trigger;
    private readonly InputAction m_RightHand_TriggerValue;
    private readonly InputAction m_RightHand_TriggerTouched;
    private readonly InputAction m_RightHand_Stick;
    private readonly InputAction m_RightHand_StickClicked;
    private readonly InputAction m_RightHand_StickTouched;
    private readonly InputAction m_RightHand_ButtonIn;
    private readonly InputAction m_RightHand_ButtonInTouched;
    private readonly InputAction m_RightHand_ButtonOut;
    private readonly InputAction m_RightHand_ButtonOutTouched;
    private readonly InputAction m_RightHand_Menu;
    public struct RightHandActions
    {
        private @XRActions m_Wrapper;
        public RightHandActions(@XRActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_RightHand_Position;
        public InputAction @Rotation => m_Wrapper.m_RightHand_Rotation;
        public InputAction @TrackingState => m_Wrapper.m_RightHand_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_RightHand_HapticDevice;
        public InputAction @Grip => m_Wrapper.m_RightHand_Grip;
        public InputAction @GripValue => m_Wrapper.m_RightHand_GripValue;
        public InputAction @Trigger => m_Wrapper.m_RightHand_Trigger;
        public InputAction @TriggerValue => m_Wrapper.m_RightHand_TriggerValue;
        public InputAction @TriggerTouched => m_Wrapper.m_RightHand_TriggerTouched;
        public InputAction @Stick => m_Wrapper.m_RightHand_Stick;
        public InputAction @StickClicked => m_Wrapper.m_RightHand_StickClicked;
        public InputAction @StickTouched => m_Wrapper.m_RightHand_StickTouched;
        public InputAction @ButtonIn => m_Wrapper.m_RightHand_ButtonIn;
        public InputAction @ButtonInTouched => m_Wrapper.m_RightHand_ButtonInTouched;
        public InputAction @ButtonOut => m_Wrapper.m_RightHand_ButtonOut;
        public InputAction @ButtonOutTouched => m_Wrapper.m_RightHand_ButtonOutTouched;
        public InputAction @Menu => m_Wrapper.m_RightHand_Menu;
        public InputActionMap Get() { return m_Wrapper.m_RightHand; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RightHandActions set) { return set.Get(); }
        public void SetCallbacks(IRightHandActions instance)
        {
            if (m_Wrapper.m_RightHandActionsCallbackInterface != null)
            {
                @Position.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnPosition;
                @Rotation.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnRotation;
                @TrackingState.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTrackingState;
                @TrackingState.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTrackingState;
                @TrackingState.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTrackingState;
                @HapticDevice.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnHapticDevice;
                @HapticDevice.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnHapticDevice;
                @HapticDevice.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnHapticDevice;
                @Grip.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGrip;
                @Grip.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGrip;
                @Grip.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGrip;
                @GripValue.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGripValue;
                @GripValue.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGripValue;
                @GripValue.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGripValue;
                @Trigger.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTrigger;
                @Trigger.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTrigger;
                @Trigger.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTrigger;
                @TriggerValue.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerValue;
                @TriggerValue.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerValue;
                @TriggerValue.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerValue;
                @TriggerTouched.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerTouched;
                @TriggerTouched.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerTouched;
                @TriggerTouched.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerTouched;
                @Stick.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStick;
                @Stick.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStick;
                @Stick.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStick;
                @StickClicked.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStickClicked;
                @StickClicked.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStickClicked;
                @StickClicked.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStickClicked;
                @StickTouched.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStickTouched;
                @StickTouched.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStickTouched;
                @StickTouched.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnStickTouched;
                @ButtonIn.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonIn;
                @ButtonIn.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonIn;
                @ButtonIn.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonIn;
                @ButtonInTouched.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonInTouched;
                @ButtonInTouched.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonInTouched;
                @ButtonInTouched.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonInTouched;
                @ButtonOut.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonOut;
                @ButtonOut.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonOut;
                @ButtonOut.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonOut;
                @ButtonOutTouched.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonOutTouched;
                @ButtonOutTouched.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonOutTouched;
                @ButtonOutTouched.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnButtonOutTouched;
                @Menu.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnMenu;
            }
            m_Wrapper.m_RightHandActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @HapticDevice.started += instance.OnHapticDevice;
                @HapticDevice.performed += instance.OnHapticDevice;
                @HapticDevice.canceled += instance.OnHapticDevice;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @GripValue.started += instance.OnGripValue;
                @GripValue.performed += instance.OnGripValue;
                @GripValue.canceled += instance.OnGripValue;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @TriggerValue.started += instance.OnTriggerValue;
                @TriggerValue.performed += instance.OnTriggerValue;
                @TriggerValue.canceled += instance.OnTriggerValue;
                @TriggerTouched.started += instance.OnTriggerTouched;
                @TriggerTouched.performed += instance.OnTriggerTouched;
                @TriggerTouched.canceled += instance.OnTriggerTouched;
                @Stick.started += instance.OnStick;
                @Stick.performed += instance.OnStick;
                @Stick.canceled += instance.OnStick;
                @StickClicked.started += instance.OnStickClicked;
                @StickClicked.performed += instance.OnStickClicked;
                @StickClicked.canceled += instance.OnStickClicked;
                @StickTouched.started += instance.OnStickTouched;
                @StickTouched.performed += instance.OnStickTouched;
                @StickTouched.canceled += instance.OnStickTouched;
                @ButtonIn.started += instance.OnButtonIn;
                @ButtonIn.performed += instance.OnButtonIn;
                @ButtonIn.canceled += instance.OnButtonIn;
                @ButtonInTouched.started += instance.OnButtonInTouched;
                @ButtonInTouched.performed += instance.OnButtonInTouched;
                @ButtonInTouched.canceled += instance.OnButtonInTouched;
                @ButtonOut.started += instance.OnButtonOut;
                @ButtonOut.performed += instance.OnButtonOut;
                @ButtonOut.canceled += instance.OnButtonOut;
                @ButtonOutTouched.started += instance.OnButtonOutTouched;
                @ButtonOutTouched.performed += instance.OnButtonOutTouched;
                @ButtonOutTouched.canceled += instance.OnButtonOutTouched;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
            }
        }
    }
    public RightHandActions @RightHand => new RightHandActions(this);

    // XRI UI
    private readonly InputActionMap m_XRIUI;
    private IXRIUIActions m_XRIUIActionsCallbackInterface;
    private readonly InputAction m_XRIUI_Navigate;
    private readonly InputAction m_XRIUI_Submit;
    private readonly InputAction m_XRIUI_Cancel;
    private readonly InputAction m_XRIUI_Point;
    private readonly InputAction m_XRIUI_Click;
    private readonly InputAction m_XRIUI_ScrollWheel;
    private readonly InputAction m_XRIUI_MiddleClick;
    private readonly InputAction m_XRIUI_RightClick;
    public struct XRIUIActions
    {
        private @XRActions m_Wrapper;
        public XRIUIActions(@XRActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_XRIUI_Navigate;
        public InputAction @Submit => m_Wrapper.m_XRIUI_Submit;
        public InputAction @Cancel => m_Wrapper.m_XRIUI_Cancel;
        public InputAction @Point => m_Wrapper.m_XRIUI_Point;
        public InputAction @Click => m_Wrapper.m_XRIUI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_XRIUI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_XRIUI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_XRIUI_RightClick;
        public InputActionMap Get() { return m_Wrapper.m_XRIUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIUIActions set) { return set.Get(); }
        public void SetCallbacks(IXRIUIActions instance)
        {
            if (m_Wrapper.m_XRIUIActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_XRIUIActionsCallbackInterface.OnRightClick;
            }
            m_Wrapper.m_XRIUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
            }
        }
    }
    public XRIUIActions @XRIUI => new XRIUIActions(this);
    private int m_GenericXRControllerSchemeIndex = -1;
    public InputControlScheme GenericXRControllerScheme
    {
        get
        {
            if (m_GenericXRControllerSchemeIndex == -1) m_GenericXRControllerSchemeIndex = asset.FindControlSchemeIndex("Generic XR Controller");
            return asset.controlSchemes[m_GenericXRControllerSchemeIndex];
        }
    }
    private int m_ContinuousMoveSchemeIndex = -1;
    public InputControlScheme ContinuousMoveScheme
    {
        get
        {
            if (m_ContinuousMoveSchemeIndex == -1) m_ContinuousMoveSchemeIndex = asset.FindControlSchemeIndex("Continuous Move");
            return asset.controlSchemes[m_ContinuousMoveSchemeIndex];
        }
    }
    private int m_NoncontinuousMoveSchemeIndex = -1;
    public InputControlScheme NoncontinuousMoveScheme
    {
        get
        {
            if (m_NoncontinuousMoveSchemeIndex == -1) m_NoncontinuousMoveSchemeIndex = asset.FindControlSchemeIndex("Noncontinuous Move");
            return asset.controlSchemes[m_NoncontinuousMoveSchemeIndex];
        }
    }
    public interface IHeadActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
    }
    public interface ILeftHandActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnGripValue(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnTriggerValue(InputAction.CallbackContext context);
        void OnTriggerTouched(InputAction.CallbackContext context);
        void OnStick(InputAction.CallbackContext context);
        void OnStickClicked(InputAction.CallbackContext context);
        void OnStickTouched(InputAction.CallbackContext context);
        void OnButtonIn(InputAction.CallbackContext context);
        void OnButtonInTouched(InputAction.CallbackContext context);
        void OnButtonOut(InputAction.CallbackContext context);
        void OnButtonOutTouched(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
    public interface IRightHandActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnGripValue(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnTriggerValue(InputAction.CallbackContext context);
        void OnTriggerTouched(InputAction.CallbackContext context);
        void OnStick(InputAction.CallbackContext context);
        void OnStickClicked(InputAction.CallbackContext context);
        void OnStickTouched(InputAction.CallbackContext context);
        void OnButtonIn(InputAction.CallbackContext context);
        void OnButtonInTouched(InputAction.CallbackContext context);
        void OnButtonOut(InputAction.CallbackContext context);
        void OnButtonOutTouched(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
    public interface IXRIUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
    }
}
