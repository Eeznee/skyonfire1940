//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/MenuActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MenuActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MenuActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MenuActions"",
    ""maps"": [
        {
            ""name"": ""General"",
            ""id"": ""670cdb21-5c4c-42ac-bc78-697cffc7a9ad"",
            ""actions"": [
                {
                    ""name"": ""Screenshot"",
                    ""type"": ""Button"",
                    ""id"": ""2cd3c19d-f81c-4eff-a3f8-1ca48f2e571f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""0d1b0015-4bd0-4fca-9a85-072ebc695c97"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HideUI"",
                    ""type"": ""Button"",
                    ""id"": ""7c8a9a11-d7a0-460d-9382-24ef24eb9e46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""85c4bf7a-92ef-4372-9825-b51b0ba0fc7b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""53fc4361-746a-4b1e-a06f-deb12048ceb8"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Screenshot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e45871d6-2015-4261-b3f4-e77b97513a97"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e37a26b-dd32-46d8-925f-ffaeeb86b58c"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66c00533-0f02-4365-adc7-7375d8b8c640"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // General
        m_General = asset.FindActionMap("General", throwIfNotFound: true);
        m_General_Screenshot = m_General.FindAction("Screenshot", throwIfNotFound: true);
        m_General_Cancel = m_General.FindAction("Cancel", throwIfNotFound: true);
        m_General_HideUI = m_General.FindAction("HideUI", throwIfNotFound: true);
        m_General_Scroll = m_General.FindAction("Scroll", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // General
    private readonly InputActionMap m_General;
    private IGeneralActions m_GeneralActionsCallbackInterface;
    private readonly InputAction m_General_Screenshot;
    private readonly InputAction m_General_Cancel;
    private readonly InputAction m_General_HideUI;
    private readonly InputAction m_General_Scroll;
    public struct GeneralActions
    {
        private @MenuActions m_Wrapper;
        public GeneralActions(@MenuActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Screenshot => m_Wrapper.m_General_Screenshot;
        public InputAction @Cancel => m_Wrapper.m_General_Cancel;
        public InputAction @HideUI => m_Wrapper.m_General_HideUI;
        public InputAction @Scroll => m_Wrapper.m_General_Scroll;
        public InputActionMap Get() { return m_Wrapper.m_General; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
        public void SetCallbacks(IGeneralActions instance)
        {
            if (m_Wrapper.m_GeneralActionsCallbackInterface != null)
            {
                @Screenshot.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnScreenshot;
                @Screenshot.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnScreenshot;
                @Screenshot.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnScreenshot;
                @Cancel.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnCancel;
                @HideUI.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnHideUI;
                @HideUI.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnHideUI;
                @HideUI.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnHideUI;
                @Scroll.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnScroll;
            }
            m_Wrapper.m_GeneralActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Screenshot.started += instance.OnScreenshot;
                @Screenshot.performed += instance.OnScreenshot;
                @Screenshot.canceled += instance.OnScreenshot;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @HideUI.started += instance.OnHideUI;
                @HideUI.performed += instance.OnHideUI;
                @HideUI.canceled += instance.OnHideUI;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
            }
        }
    }
    public GeneralActions @General => new GeneralActions(this);
    public interface IGeneralActions
    {
        void OnScreenshot(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnHideUI(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
    }
}
