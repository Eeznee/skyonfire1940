//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.2
//     from Assets/2.Scripts/Controls/Input Actions/Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/2.Scripts/Controls/Input Actions/Actions.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @Actions: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @Actions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""version"": 1,
    ""name"": ""Actions"",
    ""maps"": [
        {
            ""name"": ""Pilot"",
            ""id"": ""1ad0f1f1-b503-48aa-8c93-4c37ddae41b6"",
            ""actions"": [
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""0f488cf2-9e1c-49aa-a4f7-f88726637702"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Value"",
                    ""id"": ""e37ebcd6-fd3b-4db8-ac31-b463a6bdaab1"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rudder"",
                    ""type"": ""Value"",
                    ""id"": ""81d8f06b-58bf-4065-96ce-f6f1c1f46bfe"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThrottleRelative"",
                    ""type"": ""Value"",
                    ""id"": ""e320bf88-5306-4b52-afe8-e5acaf20e391"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThrottleRaw"",
                    ""type"": ""Value"",
                    ""id"": ""9d163b4f-b847-4b59-aac7-4b3d216beb08"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FlapsRelative"",
                    ""type"": ""Value"",
                    ""id"": ""d7232ed8-4164-4c4b-9cc2-59e04c06c99f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FlapsRaw"",
                    ""type"": ""Value"",
                    ""id"": ""c0869f74-0d0b-4a9e-a25f-979af4f026db"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FireGuns"",
                    ""type"": ""Button"",
                    ""id"": ""5177f510-d9fb-4023-8a52-3a5e352adbb3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirePrimaries"",
                    ""type"": ""Button"",
                    ""id"": ""41ce667b-c3d6-4372-949f-bd085fb21bff"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireSecondaries"",
                    ""type"": ""Button"",
                    ""id"": ""bde46824-6efe-4761-b14a-d0ed9ffe00f1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Bomb"",
                    ""type"": ""Button"",
                    ""id"": ""877d4efc-9608-48b5-afe5-d6c157ef522d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rocket"",
                    ""type"": ""Button"",
                    ""id"": ""5c5ab42d-1d5e-4561-868f-bfb33cf02bf6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""cb449e99-91f7-4dde-83a9-2d9a9b3c5ed0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EngineToggle"",
                    ""type"": ""Button"",
                    ""id"": ""abf725c7-ac0c-4048-8f60-cc42aa48c6e4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Canopy"",
                    ""type"": ""Button"",
                    ""id"": ""b5993fd7-3be6-4c5f-b80b-2f6feb4036bd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BombBay"",
                    ""type"": ""Button"",
                    ""id"": ""630edbf7-17c6-49fd-8eec-4c8d734fe5d1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Airbrakes"",
                    ""type"": ""Button"",
                    ""id"": ""bd742fda-86a9-48b0-900f-c50182b7164e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LandingGear"",
                    ""type"": ""Button"",
                    ""id"": ""b403097b-a7b3-438b-9806-a182f7d2e8dc"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""1b4658d5-f7d6-499f-a2f8-66cb1c22c793"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b4a4f5e9-3346-4485-a1c9-f720e1c75c5a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4a0d6066-2b94-4fc8-9431-d8f41f805d49"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5c7bc9f7-9d71-4a95-83e3-1feb78ace2a6"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce594220-74ee-4f20-9463-c87b62df8ae5"",
                    ""path"": ""<SofDevice>/mainStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""aa450614-4dfd-4243-aac0-87435f0f68a4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0c9c4c4c-0385-4ceb-8752-24a54e9f31af"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b071644f-fd9a-4f9d-9eba-20b10b6a7557"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""79ffd275-6c1b-496b-8042-8f4040a16637"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fcd2b06-baa6-4904-aadd-710faafa7cb4"",
                    ""path"": ""<SofDevice>/mainStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""06ce68d4-4cbd-41fa-829b-bd6c68232825"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rudder"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c7688938-c257-487d-ac22-790f0089df70"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""06653e16-5715-4259-8cf5-a828ea33be5d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f25d276b-8485-4f14-af76-6596da5117e0"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.25,max=1)"",
                    ""groups"": """",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a9310bb-6f88-46d4-8e16-0742d4a3dec9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""FirePrimaries"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f722130f-cb26-4991-9419-adbcc2891d1a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirePrimaries"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""708eff2c-a485-45c2-bd22-3583240c20ae"",
                    ""path"": ""<SofDevice>/primaryFire"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""FirePrimaries"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16993981-efd0-4535-8d08-12633cfd3b37"",
                    ""path"": ""<SofDevice>/rudder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6894a1e1-44af-4b3f-a99f-552359ec99b1"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""FireSecondaries"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d3f983d-e005-4b29-a369-c8203d20c525"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireSecondaries"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""932cee86-7acb-46e0-a631-1845c7ad797b"",
                    ""path"": ""<SofDevice>/secondaryFire"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""FireSecondaries"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1dec4592-26ce-4325-9fa1-90e2a180b22c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Bomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a871393d-195c-4054-a0be-910b0815513f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Bomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2cb2495-ec7a-42ac-b689-32d3c94e1650"",
                    ""path"": ""<SofDevice>/dropBomb"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Bomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""453b6dd5-2900-4edf-9086-07a6dae5b1c9"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Rocket"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba2d4f00-eb63-433e-81c7-8965402da1c4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rocket"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd517e1e-b593-46ab-ac1b-9573bb0ab84e"",
                    ""path"": ""<SofDevice>/fireRocket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rocket"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de5c73ae-e9a1-40cd-aa4d-36f9697fc242"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""LandingGear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92d46e6b-9d06-4e53-b29e-4a72ee587c99"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LandingGear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""910f88ae-f744-4d77-9009-e9069363de8b"",
                    ""path"": ""<SofDevice>/toggleGear"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LandingGear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""447f74a1-540b-401d-b961-a29873c503dc"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Airbrakes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa36b728-1741-466e-b2b4-5cb175d4c424"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Airbrakes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d28db4f-f4af-46ca-a83c-d8ecb74c0557"",
                    ""path"": ""<SofDevice>/toggleAirbrakes"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Airbrakes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80952f92-1492-4cd0-b117-ed79c52c85cf"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""BombBay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cc150cd-e5ce-4220-b2d5-5a97413d1de9"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Canopy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard 1D Axis"",
                    ""id"": ""a6efac48-62fb-498b-a4b0-8824c13a99c1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlapsRelative"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""36afb09b-3b69-4dfa-a401-80f044342611"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""FlapsRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d5a3ed12-3a94-47e9-8cec-fb108a6621c0"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""FlapsRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d9f12cba-f995-4945-a9f2-36736bcd5185"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""EngineToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6214309-a81b-48d1-a858-b8a776749c31"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a225424-8fd6-4006-9115-3d654bc60e51"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d8f8ca7-0649-41c0-bb52-cb2b4dde8934"",
                    ""path"": ""<SofDevice>/brakes"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""81efea81-9ca6-40ce-af4a-4a6748c4ebc1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrottleRaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""671ebdff-5f1d-4688-bbab-5e5abc8f41c2"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrottleRaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2a709054-be1e-4e37-b89c-d614b652ff3a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrottleRaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""74d49747-7758-4002-adb4-4fdcfe8ebcff"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrottleRaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4673614-89f5-41f9-a3b8-9a1908b6bfc9"",
                    ""path"": ""<SofDevice>/throttle"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""ThrottleRaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1b6d190-39ae-474b-b20a-99f156ab1364"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireGuns"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd917d61-06a7-44ba-a637-474eecdc236a"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireGuns"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1DAxis"",
                    ""id"": ""f1fb273d-d985-434e-abc5-b622e7ca61a4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrottleRelative"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""a1052417-092d-4a2f-b385-cecf189e48e5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrottleRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""2b945493-e48e-4bbb-992d-14a61ba4fdcd"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrottleRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bd472d98-555d-4f73-8ee5-6499db73c939"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.5)"",
                    ""groups"": """",
                    ""action"": ""ThrottleRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0850e79c-a22a-4835-86f1-407522ffa60f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EngineToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61060668-7659-49ad-8108-905f4d2fce08"",
                    ""path"": ""<SofDevice>/toggleEngines"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EngineToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fc458e1-5092-4e15-bb1a-eabde292d0a7"",
                    ""path"": ""<Gamepad>/dpad/y"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""FlapsRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""8449200e-fa84-4476-9632-33595a007d2b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlapsRelative"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8a5b3c7b-5e4e-4b49-8418-ee5ceedd25db"",
                    ""path"": ""<SofDevice>/flapsUp"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlapsRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ddd3ed44-14e4-42b4-a116-1fb6370fc8ac"",
                    ""path"": ""<SofDevice>/flapsDown"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlapsRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1DAxis"",
                    ""id"": ""2febfe51-f995-4ca1-b4b6-10b665e77d57"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlapsRaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""fd4b7f69-9c43-42e7-89ee-8103256166f0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlapsRaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""7ba8d5a1-a30a-44b7-a527-08e0d3f0413e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlapsRaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""74673112-01da-4d6b-b3f7-31745233bd43"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlapsRaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47b9f33d-2d8a-4674-8d86-359c9c50c254"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Canopy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5526fc1e-e89b-40d3-8869-b6bfaf090b85"",
                    ""path"": ""<SofDevice>/toggleCanopy"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Canopy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d074338-bb0a-4531-a5ed-d114776b332e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BombBay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33ce88bb-44fd-401a-bb99-7e93e6a282e6"",
                    ""path"": ""<SofDevice>/toggleBombBay"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BombBay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gunner"",
            ""id"": ""d24ac023-5ba5-4344-bdd2-d11fa1eda0e8"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""42c11371-0717-474c-b934-cd70927823b9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateHorizontal"",
                    ""type"": ""Value"",
                    ""id"": ""4278fcf7-cc94-49a3-a7a5-ebd231b2283e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateVertical"",
                    ""type"": ""Value"",
                    ""id"": ""39c41735-0b04-4608-8a21-8409b0db4f35"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SpecialAxis"",
                    ""type"": ""Value"",
                    ""id"": ""39d7059a-4879-4658-8b59-0c3c9c9e398e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hydraulics"",
                    ""type"": ""Value"",
                    ""id"": ""01d44c6e-cd2e-4421-a7f1-0877048fe5f6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e92a6364-b11b-4a3a-be8c-cd3da4f8cdd5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4c443d4-141c-446a-92f9-2623497a4b38"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5f2fa5c-f9da-4016-8dbc-b75120313eca"",
                    ""path"": ""<SofDevice>/primaryFire"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""ca3e7aa9-f86e-476b-88f3-37865b23c1bf"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hydraulics"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""82a9e7fc-a45f-4b38-9e88-3cef2406927a"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Hydraulics"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c9b2aa99-d69e-47cb-be6e-4db08036c102"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Hydraulics"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4059be70-7c22-4705-ba18-b852d325a38c"",
                    ""path"": ""<Gamepad>/dpad/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Hydraulics"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""5bb8f8d4-33fb-403c-b09c-f796ee3324ca"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0a78b045-8de6-4b51-83f7-39d9bcf64b04"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""SpecialAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fefaeeee-95fa-4b1f-93cf-61f3b12a609d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""SpecialAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0dd372ba-cd2e-4396-84a2-dd45de5bce0b"",
                    ""path"": ""<Gamepad>/dpad/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SpecialAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2a3f497a-aa01-4cdc-9d0e-2347e2fa3b84"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""091921e6-d086-4d99-a39c-bb1a715e0ef5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""3cca7463-afa0-4ec6-bf1a-8e76ad199525"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0a22f36a-bb6f-4d02-9891-575642b2cbcf"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""RotateHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b536154-ec78-492d-819c-64982afc6d39"",
                    ""path"": ""<SofDevice>/mainStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""73fe98de-52c7-48e9-a8a7-9046e0a9c12b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateVertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""5e55f2a4-9033-4aa6-8098-d50717c5dab6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""81ee73b9-bd80-4b7d-af9b-a83fe0016c91"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f5eacbb8-dedf-4fb8-a6ca-60903b962f9c"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""RotateVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c7f389f-79a9-41ff-a546-d2c048c65c31"",
                    ""path"": ""<SofDevice>/mainStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Bomber"",
            ""id"": ""53909b14-9315-4599-8ce2-5f2da547213d"",
            ""actions"": [
                {
                    ""name"": ""RotateSightView"",
                    ""type"": ""Value"",
                    ""id"": ""db0d9429-f402-45b2-a7c2-2044c5690a57"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rudder"",
                    ""type"": ""Value"",
                    ""id"": ""1d8226bd-4128-4e8c-8e73-f520b42e8ffb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BombSightMode"",
                    ""type"": ""Button"",
                    ""id"": ""0ac3e46d-68cf-406e-9c1a-96103271998b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interval"",
                    ""type"": ""Button"",
                    ""id"": ""962d187a-c1c2-43fd-93ce-bf485736a4fd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quantity"",
                    ""type"": ""Button"",
                    ""id"": ""0cedc81a-c678-4abd-8547-78baecaf058f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Bomb"",
                    ""type"": ""Button"",
                    ""id"": ""6eaa7876-b7a3-4a55-8eb9-d3093238e8bb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BombBay"",
                    ""type"": ""Button"",
                    ""id"": ""cfb1cb73-638f-4745-91b3-61a32a80ae7d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""62ca3883-0b0b-475c-94d2-a5cca9e69731"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Interval"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78767946-8c6f-454e-b9d9-804573d3b850"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""BombSightMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf4268db-df08-448d-8eee-5b4d22ebb9a8"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Quantity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""963c0487-fef5-4425-b186-9bd8005a7c58"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Bomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1967dbba-4cee-4f22-9d52-ea851882205f"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""BombBay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""99d9691a-ea53-4bf7-a3dd-c01722312b97"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rudder"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e2153abc-803a-4282-8df8-9cec2ee34c61"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""75086f34-5124-4d05-b63b-751b9dcef90f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eed71b6c-4d3b-4c8f-ba4b-0951ab07b127"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3564a7bc-3520-4c10-ae60-1930a4ca9909"",
                    ""path"": ""<SofDevice>/rudder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2DVector"",
                    ""id"": ""7f0f431e-2d4b-4871-bf24-821456176f53"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateSightView"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""26d3ddf9-85ce-4111-ad40-863136753aab"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateSightView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""bc55d9f0-a40d-496b-b24f-386b3345b022"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateSightView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""d4e53540-d671-4596-9377-9dd24ee7dbef"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateSightView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""87efe8d6-04c2-48db-9350-c04e9656a6fc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateSightView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a9576468-26d7-417a-98eb-e08b049d22d6"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateSightView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bab923ec-3bbd-4ecb-8997-f2c1281639a0"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BombSightMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94d6bce1-a8c3-4548-a8ae-12f2d1eecc43"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interval"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0fca7031-c100-4f7d-b6b5-38642678d956"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quantity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f98e6b55-b3ea-4d5d-af53-c8078b5e8545"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Bomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7add19a7-0c1a-46ce-b675-7ec7fbb3f6e4"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BombBay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AnySeat"",
            ""id"": ""670cdb21-5c4c-42ac-bc78-697cffc7a9ad"",
            ""actions"": [
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""973ae255-6a64-40e8-b8c3-3593cafad3b2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BailOut"",
                    ""type"": ""Button"",
                    ""id"": ""c4f364b6-cf96-4b40-899d-270b00b82c88"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchSeat"",
                    ""type"": ""Button"",
                    ""id"": ""07e53d24-aed8-4c0d-bc9e-e4e262accb2c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""Value"",
                    ""id"": ""f10da0d4-fd63-4a3a-92ed-047477ac8c26"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CycleCrew"",
                    ""type"": ""Button"",
                    ""id"": ""78ae79b6-f256-495d-80a6-696b28bf908e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextCrew"",
                    ""type"": ""Button"",
                    ""id"": ""87402a4b-050f-4a95-8635-a04c1a0f3ee1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PreviousCrew"",
                    ""type"": ""Button"",
                    ""id"": ""73a83663-3175-4ad8-b9ff-b463ef354ece"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToBombardier"",
                    ""type"": ""Button"",
                    ""id"": ""c18d4877-e3bd-4e5b-a6b5-2891be846190"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pilot"",
                    ""type"": ""Button"",
                    ""id"": ""e06439c6-d435-402d-a5b7-fca9ae91f3d0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew2"",
                    ""type"": ""Button"",
                    ""id"": ""fd4ac15a-0a7d-4344-9ea6-1b2c2997dab8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew3"",
                    ""type"": ""Button"",
                    ""id"": ""d28058aa-c011-42cc-8acc-dfe6ee816bc6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew4"",
                    ""type"": ""Button"",
                    ""id"": ""763817b9-37fd-45d9-a71e-7e0fa3608a64"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew5"",
                    ""type"": ""Button"",
                    ""id"": ""53d091ed-9908-4ca5-bdb3-d325b41e565d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew6"",
                    ""type"": ""Button"",
                    ""id"": ""c9f6e126-9ad9-4df2-8f54-3fc343a1c8fe"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew7"",
                    ""type"": ""Button"",
                    ""id"": ""d6dfc4be-888b-4f3a-b2e9-cf0903471e45"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew8"",
                    ""type"": ""Button"",
                    ""id"": ""05276ba2-c8ae-47f6-80fd-4469b13c2966"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew9"",
                    ""type"": ""Button"",
                    ""id"": ""47b0a2ae-e6fd-4905-8bba-b4af1a93ad67"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew10"",
                    ""type"": ""Button"",
                    ""id"": ""7be9674a-e440-491d-9659-8105ca53f352"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew11"",
                    ""type"": ""Button"",
                    ""id"": ""5898e439-cf8d-4711-8562-721c9c6347d0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crew12"",
                    ""type"": ""Button"",
                    ""id"": ""a2d506cf-5419-4447-a1ba-ff778045797f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""75cc7e04-883b-4418-b4ce-cc995f493262"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66c9279a-76e0-41de-bfd9-757564210770"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5dd9710-bb20-4ae5-95b5-d711855f69e1"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""BailOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e98107e1-9302-4241-a97b-cf0388fe277d"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""SwitchSeat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3165e3f-9986-425a-9193-19c0cde50cb0"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ab3a09a-f8c1-4b61-8518-d0107856b936"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""276c5a89-798a-4d48-8a2e-5c2ea9a6e606"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75f0a2a4-1f1e-47e8-b404-e450485d750a"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33ae23be-1e07-4ac6-9acb-3c454c54c8ae"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1b697e1-8d0a-455f-a73d-3d298e3b16ee"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9832c62b-9753-4886-9a97-f44008584464"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76eb1fbd-e8b2-491d-a93e-d467d965b304"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3010d1fa-1794-4b5e-b587-76265daeb8f0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2ad3d13-26e6-496a-9b04-32ff8d60c5b3"",
                    ""path"": ""<Keyboard>/f6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e1fc04e-0d7f-4449-85fd-06128400dc8f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ddd448c-015d-499a-81c7-86f545263b20"",
                    ""path"": ""<Keyboard>/f7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""343655d7-db19-4726-a0c6-08845b064126"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97d6b8a0-49db-41ab-96ba-4c6436e6cc53"",
                    ""path"": ""<Keyboard>/f8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa4890fe-58fb-4313-9a51-af94bff6fe84"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19a2ca02-e245-4505-ace1-861865025d48"",
                    ""path"": ""<Keyboard>/f9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3fcf3db-2bcb-4070-9a37-a2bd5a79bced"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f4f0513-b9f8-4046-9536-eeab4717d912"",
                    ""path"": ""<Keyboard>/f10"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""938a0576-e220-4347-ba65-1848588265d6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c6492c8-24b5-49f7-82e4-555b28e6e347"",
                    ""path"": ""<Keyboard>/f11"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew11"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5293359-0fb9-4e6c-ad40-7e14f3f270b5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew11"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4045d69a-cae4-4ba3-a02b-6cec1a530a28"",
                    ""path"": ""<Keyboard>/f12"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew12"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""770e06c4-02b3-4a83-95ae-6de1abb86470"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crew12"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01497559-d02d-4237-882a-025a755efac5"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToBombardier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d120cb7a-020f-411b-98ac-11b46fff23b3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToBombardier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bac6d395-03e4-496c-bbf5-af24f01e6dd9"",
                    ""path"": ""<SofDevice>/bombSight"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToBombardier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00885609-5ac2-438d-a189-4b4a4dc5db92"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextCrew"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5f0dcbe-32a7-4789-b2e3-d4a5dd9e33d3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextCrew"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77cc8699-0d1d-4f39-ac41-e6741a375b32"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleCrew"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""458b6934-2518-4165-b2c9-ef0de0b33f8e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleCrew"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e065e49d-59f0-4484-b32e-dc45b5c7c2ae"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousCrew"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5824c96-7fed-4026-b475-2afbb2203cde"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousCrew"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37ff6549-a9b9-4bf7-8943-3ec6146f7245"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pilot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b62ed792-ac86-4ba0-8fa2-2d9e7b3a8ed3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pilot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ab57689-43b7-476e-9d23-2903cab6512b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchSeat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87e21d1f-d945-41e4-9faa-54a7080277d2"",
                    ""path"": ""<SofDevice>/switchSeat"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchSeat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3add38e6-eb4c-4b73-af54-f28153a47eae"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BailOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b39e13aa-f44d-4488-bfe5-7a894a874d31"",
                    ""path"": ""<SofDevice>/bailOut"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BailOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ActionWheel"",
            ""id"": ""21f180b3-171e-441a-8fef-7a11945156ef"",
            ""actions"": [
                {
                    ""name"": ""ToggleWheel"",
                    ""type"": ""Button"",
                    ""id"": ""ce1460fb-9b86-429e-ac13-700461a585b3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""e59e1c1f-ac60-42a6-a7f7-15936795aa2f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""343bd2ee-56ce-4e43-81d7-f73b0a8e064d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option1"",
                    ""type"": ""Button"",
                    ""id"": ""8fa2109c-9026-4f13-b489-ac4fed04dd52"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option2"",
                    ""type"": ""Button"",
                    ""id"": ""44de0d59-ab57-4e7c-b3e6-5b85b4977e3c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option3"",
                    ""type"": ""Button"",
                    ""id"": ""313362a8-eedb-400e-8dd4-56345ce4be7b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option4"",
                    ""type"": ""Button"",
                    ""id"": ""1e3a854e-e8b3-4312-9032-d662f0553c00"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option5"",
                    ""type"": ""Button"",
                    ""id"": ""a8580263-c8e2-4170-a694-951f73a400cb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option6"",
                    ""type"": ""Button"",
                    ""id"": ""8d4be25b-fd58-4ae7-abb2-9a642f1d3118"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eefbd337-9693-4b4f-a8c9-348a6e8d147f"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d429984-bb78-41fa-b085-8a3eab719c00"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2DVector"",
                    ""id"": ""44831709-c742-4355-b707-9c82c5ea4256"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""35ace4e5-4255-4944-8333-b0660dfd8663"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""f72cd6a5-6466-4df9-93c8-2c6620971632"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""d0f06d99-843f-4ad7-b507-7e5162ef2b54"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""ada6990e-97cf-4708-b8f0-48d25826e6c9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5052297d-a894-4243-9c4c-a2111391ab5e"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6b1fdc8-567a-4ed4-ba2d-523916780cc7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36727755-0d03-4738-b4b1-ed54f087f0fe"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1950ca6a-4de3-4c6e-8c5c-d2ee649a05ef"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67c6d71a-49f3-44f9-b1e9-35000365352f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8381ec86-16a0-4998-8991-09c6aaf9d998"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9337efd6-7800-4018-aaf4-d211786539ae"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07df274e-3fe3-44c2-b83f-c2c01d68d7b1"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c49c51a4-7ed5-4e52-a8b9-5ffe2224eab1"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a28c8948-a946-4c24-9aa2-3dac4f872540"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b004b386-32c5-470a-bf8a-52e43e2330d7"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd110959-b3ab-488a-abde-28bdac7695c6"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d9998a0-d511-4de0-8f90-432b6d087613"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cf84834-ebdb-4146-a5be-f2fae8a1ea52"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36bcabc2-3ae8-4fa0-b614-211ec49e7fd2"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera"",
            ""id"": ""61e88d7e-5e48-4589-a605-2bfdecd5c25d"",
            ""actions"": [
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""54fd8d15-8250-4b96-9524-f108e9c2a968"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""InvertVector2(invertX=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveHorizontal"",
                    ""type"": ""Value"",
                    ""id"": ""c7e8ed18-13e9-40be-9a1f-fb429bdaf6db"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveVertical"",
                    ""type"": ""Value"",
                    ""id"": ""d1158a6b-d55b-4352-9cae-b3902ef18e80"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ResetRotation"",
                    ""type"": ""Button"",
                    ""id"": ""dd74fa69-1012-4064-bdcf-8644b6a146f5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FreeLook"",
                    ""type"": ""Button"",
                    ""id"": ""a9e713f3-78a2-4bd1-9c5f-a71d2654e144"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleAim"",
                    ""type"": ""Button"",
                    ""id"": ""0ca7759f-9c70-4b0c-8b0a-2fac5be8fd54"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HoldAim"",
                    ""type"": ""Button"",
                    ""id"": ""f16eb4db-1885-459d-9117-4f336a05d3a5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleViewMode"",
                    ""type"": ""Button"",
                    ""id"": ""d0603e2b-4ff2-49f0-856e-554d61880718"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleDynamic"",
                    ""type"": ""Button"",
                    ""id"": ""473bc0e8-e066-434e-963b-475c2615c2ce"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookBehind"",
                    ""type"": ""Button"",
                    ""id"": ""7bb00b74-90a5-4b16-8762-8111b5914e0b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Unlock"",
                    ""type"": ""Button"",
                    ""id"": ""b8b4d147-67db-4540-8608-fbd4ac67ee44"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Speed"",
                    ""type"": ""Value"",
                    ""id"": ""2f78f2ac-1599-4825-86dd-f4b0d3c64896"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveAtMaxSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""8c4573ba-92fc-43d1-976e-69f259d061d4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CustomCamera1"",
                    ""type"": ""Button"",
                    ""id"": ""7f4d2464-55af-4c97-b0cb-ac6c695ae93a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CustomCamera2"",
                    ""type"": ""Button"",
                    ""id"": ""71932058-fa2d-4d4d-818d-686548edec31"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CustomCamera3"",
                    ""type"": ""Button"",
                    ""id"": ""b2b6f590-ddcc-4652-a095-c6bc1ed9138a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CustomCamera4"",
                    ""type"": ""Button"",
                    ""id"": ""1903a70b-437b-45fa-a49f-0bcd8659bbaa"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CustomCamera5"",
                    ""type"": ""Button"",
                    ""id"": ""cdf66a9e-0886-4481-ab9b-ba40e5cb59b0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CustomCamera6"",
                    ""type"": ""Button"",
                    ""id"": ""8db12995-2564-47df-9399-0656511886a0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomRelativeAxis"",
                    ""type"": ""Value"",
                    ""id"": ""29d47ef6-522e-4db7-96b6-214363e6c49f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TimeScaleRelative"",
                    ""type"": ""Value"",
                    ""id"": ""87cb87ae-e06b-445b-9182-68d7a1b1395c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PauseTime"",
                    ""type"": ""Button"",
                    ""id"": ""4eb4f9da-a991-4f86-ab9a-f9c44dce112e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f74adc7f-2b0a-41be-95d2-75f1a9b66a94"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ToggleViewMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2DVector"",
                    ""id"": ""1270384e-b102-4539-a54a-8a313c1abfe5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""757cf759-e524-4454-bb71-9573a7365377"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""fc00748f-484f-4c23-82e3-9a15689c7df8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""163560f1-bdb6-4661-9cb8-3406ab8ee87e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""7e4b3449-9fde-432a-a96e-73592a7db785"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e08de492-04b2-4a8e-b296-8a652ed4e598"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbb87e0b-66fb-42d5-9616-0ff8e95737ef"",
                    ""path"": ""<SofDevice>/cameraRotate"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.1,y=0.1)"",
                    ""groups"": ""SofDevice"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1602705c-789c-422f-aac9-017a6bddca33"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.1,y=0.1)"",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7781d42b-b6b8-4172-8716-b781108a9376"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ResetRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09666141-a12e-4ec6-80a6-7cbad8bb7616"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee26a249-46cc-477a-a92b-0bfa00ef29f0"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""FreeLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40410f25-8175-440e-a6e0-8b0a54496669"",
                    ""path"": ""<SofDevice>/resetCamera"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""ResetRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2166c434-b97d-4992-9403-98e4f8a7fb61"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomRelativeAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4517fda9-efb8-4772-8ad7-9e451a3073e4"",
                    ""path"": ""<Keyboard>/numpadMinus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ZoomRelativeAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e93f73f9-68a0-45c8-9f6c-853755e70950"",
                    ""path"": ""<Keyboard>/numpadPlus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ZoomRelativeAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0de63d39-b40a-4234-ba86-3d30a8ea1f05"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ToggleAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf6419aa-615b-4526-ac27-9201b3f89597"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ToggleAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""483ee282-a8b3-4cca-8a72-4a819f768c38"",
                    ""path"": ""<SofDevice>/zoomIn"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""ToggleAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea470ca1-fd82-4764-927b-28f4bf713426"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""HoldAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""989d481c-7ca6-47b0-9d21-9199dc623fe9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""HoldAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d0543a96-b2b3-4961-b947-d762099d48cd"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TimeScaleRelative"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e058126f-0afc-4113-b2b3-e0eae4e734de"",
                    ""path"": ""<Keyboard>/numpadDivide"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TimeScaleRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""84128710-0b8f-4b81-ad80-d06ac2967e26"",
                    ""path"": ""<Keyboard>/numpadMultiply"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TimeScaleRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4b20ac6b-84ee-47e8-ae06-04dfafb2a7a9"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ToggleDynamic"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0408cf9-85b6-4770-8600-25018232b702"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleViewMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec379a24-4027-4fae-9a4c-44a18a94b5cb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FreeLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1c952fd-4685-4eee-9126-8b481a6cbc8d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleDynamic"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""014e20d1-f4a5-4c4c-a320-c6383692aad6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomRelativeAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a0dbbb3-c0fb-49a1-b225-7c7f6eec7a26"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TimeScaleRelative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a85f8dec-6585-4433-870f-69fdc260b4fc"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseTime"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d5b80bf-290e-4542-8d90-13d99147c9bc"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseTime"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4a312dc-73f2-4867-adf2-3a450db5d0ef"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Unlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa040129-9051-453d-87d4-e09b8c46457a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Unlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""bc1ed576-f33e-4c9d-908d-68f89e7a0fba"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""864c5ff1-350b-42e3-8580-c1b963afb38f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""MoveHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""427e21c4-6f11-47c5-bc19-2cd69b2f719d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""MoveHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8a7c1564-16ec-4836-bdbb-ba78acfc1bff"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""MoveHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dba5182c-ab5a-4b9c-879d-00e9bcfad0ee"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""MoveHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4b5ee512-4b6f-46e7-9147-36490561f455"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b5c1cd4-fb4c-4fee-902e-cbd6323885f4"",
                    ""path"": ""<SofDevice>/moveCamera"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""MoveHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""5bc637c5-7a21-4f4e-99d1-f3d36c1a9775"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""cf1fbaa3-fbb8-4126-82ca-29ea53e09a0d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""MoveVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""829bfd30-708b-41ff-b7b9-138405685dd1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""MoveVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b3f0a52f-4a46-4f36-8796-fb8abee9d956"",
                    ""path"": ""<Gamepad>/dpad/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a423ce6-30dc-4eda-9646-cf09822f9227"",
                    ""path"": ""<SofDevice>/cameraVertical"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""MoveVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1DAxis"",
                    ""id"": ""94fb3fe9-26f9-4b58-b84f-7ffa18175035"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Speed"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""e6c84463-4a78-4f1f-8a82-726a2b60a8a3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Speed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""229f944a-aae7-44d8-ae5d-578384ac037c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Speed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""50e2183a-c92a-4a0c-8135-9f03e0777ff6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Speed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1399530b-86d5-4b73-896e-005d3d0a38d7"",
                    ""path"": ""<SofDevice>/cameraSpeed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""Speed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf9e56c6-0f2f-46ef-8242-0f8e16305f9b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard;SofDevice"",
                    ""action"": ""MoveAtMaxSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ec6a931-9a28-4e53-9541-e4ec8ec79e7e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveAtMaxSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2ab6082-f495-4cf9-b780-fe8ce455b146"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ff47664-d41f-4772-b304-6824e6fc2d93"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bafaccd8-0e4c-4cc3-9009-1715eae24cc6"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94f7c5b8-2d00-4c52-b2bf-0ec71d1c20b4"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a5a4b50-85c8-4638-a314-2c180a3e6f8a"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""510c9c0a-33c3-4e8a-afe3-c01ea411cb2f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aacff415-97d2-4716-b690-f9871649ccca"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95964143-2e0b-44c5-9df9-e5f90be8d37f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6b6e5fb-be22-4339-8ae2-37a2232e311c"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57f80fbc-9dc4-4dad-9d15-18a1f780ceb2"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bb8006e-276e-4d6a-9094-0ded6b7ebbb2"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ed71719-baf8-4684-995e-a51524a8e7cf"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CustomCamera6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""035c552a-003d-4f4c-8842-4b456c556435"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookBehind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b23845de-9a28-4b2c-9f53-72d6afb33310"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookBehind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""70eb250b-b519-4d17-8155-ba5b8bc4e435"",
            ""actions"": [
                {
                    ""name"": ""OpenPauseScreen"",
                    ""type"": ""Button"",
                    ""id"": ""021675c2-35b6-48d9-83a5-8a3c66c27a4a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HideUI"",
                    ""type"": ""Button"",
                    ""id"": ""c7af2199-3ef7-43eb-be2a-7efaea628a5c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CamEditor"",
                    ""type"": ""Button"",
                    ""id"": ""ae13e54e-9103-44c8-836c-c485a02c43c7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PhotoMode"",
                    ""type"": ""Button"",
                    ""id"": ""e76711ae-84e8-4bbc-8488-7ae38e80a057"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Screenshot"",
                    ""type"": ""Button"",
                    ""id"": ""6d919cb8-5c41-41cc-bc41-6a5921a7819d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextSquadron"",
                    ""type"": ""Button"",
                    ""id"": ""6778a72c-ab66-4e7f-a2c9-d415809db83a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PreviousSquadron"",
                    ""type"": ""Button"",
                    ""id"": ""59bd086d-1555-474d-afa2-53cc871f642f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextWing"",
                    ""type"": ""Button"",
                    ""id"": ""058e501a-590d-4dcd-a444-5d97e92d24d6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PreviousWing"",
                    ""type"": ""Button"",
                    ""id"": ""bf6b2ff4-6b00-4cf1-bd1b-03cdc335e6f1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5bde1455-b0d8-43a7-b071-62d03ffb44ea"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenPauseScreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa62cc2a-b028-4cb9-b182-75d196dcc4be"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenPauseScreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a44c9cb2-4e23-40ac-85ab-bce3a3c8cba5"",
                    ""path"": ""<SofDevice>/cancelPause"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""OpenPauseScreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ce78e7e-beda-4403-a6d8-9bb8f2c73c63"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f2a505c-4a41-4181-b15f-1124da3df437"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamEditor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5546890-94ee-44dc-976b-b336b7035005"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PhotoMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4ddd879-ed16-4908-a07e-b58beaa5bb4d"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Screenshot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4fae08a-0b47-4a8e-b6e0-84cab8cf0d7c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Screenshot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""750a455c-62da-4dd0-870d-df45adf913bb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82d0ac90-139c-4f24-9036-a0d3bcb05895"",
                    ""path"": ""<SofDevice>/hideUI"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f503944-8462-43c2-9489-bf2c17943bbc"",
                    ""path"": ""<SofDevice>/screenshot"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""SofDevice"",
                    ""action"": ""Screenshot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6aef47b3-c6bf-4218-a01a-fee7eef6e3a3"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousSquadron"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""618013e3-0676-4b21-9923-fdb0031c9804"",
                    ""path"": ""<SofDevice>/previousSquadron"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousSquadron"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06d18377-a64b-47db-a89f-e742204f3ff0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousSquadron"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d6c1fd4-65b7-4222-afab-fee868365c6a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextWing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ef3293d-96ef-46d2-80e5-472c1a1fc087"",
                    ""path"": ""<SofDevice>/nextWing"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextWing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a50ea01-46c3-473a-94ba-2f03ef5aac9d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextWing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1719db5-30b5-4c6e-a743-41f29ce48f85"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousWing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88aef888-f29b-43fc-88db-4bb0bc29a6b2"",
                    ""path"": ""<SofDevice>/previousWing"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousWing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc63683e-1055-4223-ad96-eb0a667aa09b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousWing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97563c2d-c466-499b-b13f-fae8842d6a01"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextSquadron"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ac784c1-fef2-4523-8952-0263f3f388ac"",
                    ""path"": ""<SofDevice>/nextSquadron"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextSquadron"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30062a0e-b91c-4ac0-bd61-d79314ecfb77"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextSquadron"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f8f2c62-0305-4a60-9dcc-14ce29c230cd"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamEditor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64e04b3c-2dd5-4adb-9a22-2eeaf86d8f6c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PhotoMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Pilot
        m_Pilot = asset.FindActionMap("Pilot", throwIfNotFound: true);
        m_Pilot_Pitch = m_Pilot.FindAction("Pitch", throwIfNotFound: true);
        m_Pilot_Roll = m_Pilot.FindAction("Roll", throwIfNotFound: true);
        m_Pilot_Rudder = m_Pilot.FindAction("Rudder", throwIfNotFound: true);
        m_Pilot_ThrottleRelative = m_Pilot.FindAction("ThrottleRelative", throwIfNotFound: true);
        m_Pilot_ThrottleRaw = m_Pilot.FindAction("ThrottleRaw", throwIfNotFound: true);
        m_Pilot_FlapsRelative = m_Pilot.FindAction("FlapsRelative", throwIfNotFound: true);
        m_Pilot_FlapsRaw = m_Pilot.FindAction("FlapsRaw", throwIfNotFound: true);
        m_Pilot_FireGuns = m_Pilot.FindAction("FireGuns", throwIfNotFound: true);
        m_Pilot_FirePrimaries = m_Pilot.FindAction("FirePrimaries", throwIfNotFound: true);
        m_Pilot_FireSecondaries = m_Pilot.FindAction("FireSecondaries", throwIfNotFound: true);
        m_Pilot_Bomb = m_Pilot.FindAction("Bomb", throwIfNotFound: true);
        m_Pilot_Rocket = m_Pilot.FindAction("Rocket", throwIfNotFound: true);
        m_Pilot_Brake = m_Pilot.FindAction("Brake", throwIfNotFound: true);
        m_Pilot_EngineToggle = m_Pilot.FindAction("EngineToggle", throwIfNotFound: true);
        m_Pilot_Canopy = m_Pilot.FindAction("Canopy", throwIfNotFound: true);
        m_Pilot_BombBay = m_Pilot.FindAction("BombBay", throwIfNotFound: true);
        m_Pilot_Airbrakes = m_Pilot.FindAction("Airbrakes", throwIfNotFound: true);
        m_Pilot_LandingGear = m_Pilot.FindAction("LandingGear", throwIfNotFound: true);
        // Gunner
        m_Gunner = asset.FindActionMap("Gunner", throwIfNotFound: true);
        m_Gunner_Fire = m_Gunner.FindAction("Fire", throwIfNotFound: true);
        m_Gunner_RotateHorizontal = m_Gunner.FindAction("RotateHorizontal", throwIfNotFound: true);
        m_Gunner_RotateVertical = m_Gunner.FindAction("RotateVertical", throwIfNotFound: true);
        m_Gunner_SpecialAxis = m_Gunner.FindAction("SpecialAxis", throwIfNotFound: true);
        m_Gunner_Hydraulics = m_Gunner.FindAction("Hydraulics", throwIfNotFound: true);
        // Bomber
        m_Bomber = asset.FindActionMap("Bomber", throwIfNotFound: true);
        m_Bomber_RotateSightView = m_Bomber.FindAction("RotateSightView", throwIfNotFound: true);
        m_Bomber_Rudder = m_Bomber.FindAction("Rudder", throwIfNotFound: true);
        m_Bomber_BombSightMode = m_Bomber.FindAction("BombSightMode", throwIfNotFound: true);
        m_Bomber_Interval = m_Bomber.FindAction("Interval", throwIfNotFound: true);
        m_Bomber_Quantity = m_Bomber.FindAction("Quantity", throwIfNotFound: true);
        m_Bomber_Bomb = m_Bomber.FindAction("Bomb", throwIfNotFound: true);
        m_Bomber_BombBay = m_Bomber.FindAction("BombBay", throwIfNotFound: true);
        // AnySeat
        m_AnySeat = asset.FindActionMap("AnySeat", throwIfNotFound: true);
        m_AnySeat_Reload = m_AnySeat.FindAction("Reload", throwIfNotFound: true);
        m_AnySeat_BailOut = m_AnySeat.FindAction("BailOut", throwIfNotFound: true);
        m_AnySeat_SwitchSeat = m_AnySeat.FindAction("SwitchSeat", throwIfNotFound: true);
        m_AnySeat_ScrollWheel = m_AnySeat.FindAction("ScrollWheel", throwIfNotFound: true);
        m_AnySeat_CycleCrew = m_AnySeat.FindAction("CycleCrew", throwIfNotFound: true);
        m_AnySeat_NextCrew = m_AnySeat.FindAction("NextCrew", throwIfNotFound: true);
        m_AnySeat_PreviousCrew = m_AnySeat.FindAction("PreviousCrew", throwIfNotFound: true);
        m_AnySeat_ToBombardier = m_AnySeat.FindAction("ToBombardier", throwIfNotFound: true);
        m_AnySeat_Pilot = m_AnySeat.FindAction("Pilot", throwIfNotFound: true);
        m_AnySeat_Crew2 = m_AnySeat.FindAction("Crew2", throwIfNotFound: true);
        m_AnySeat_Crew3 = m_AnySeat.FindAction("Crew3", throwIfNotFound: true);
        m_AnySeat_Crew4 = m_AnySeat.FindAction("Crew4", throwIfNotFound: true);
        m_AnySeat_Crew5 = m_AnySeat.FindAction("Crew5", throwIfNotFound: true);
        m_AnySeat_Crew6 = m_AnySeat.FindAction("Crew6", throwIfNotFound: true);
        m_AnySeat_Crew7 = m_AnySeat.FindAction("Crew7", throwIfNotFound: true);
        m_AnySeat_Crew8 = m_AnySeat.FindAction("Crew8", throwIfNotFound: true);
        m_AnySeat_Crew9 = m_AnySeat.FindAction("Crew9", throwIfNotFound: true);
        m_AnySeat_Crew10 = m_AnySeat.FindAction("Crew10", throwIfNotFound: true);
        m_AnySeat_Crew11 = m_AnySeat.FindAction("Crew11", throwIfNotFound: true);
        m_AnySeat_Crew12 = m_AnySeat.FindAction("Crew12", throwIfNotFound: true);
        // ActionWheel
        m_ActionWheel = asset.FindActionMap("ActionWheel", throwIfNotFound: true);
        m_ActionWheel_ToggleWheel = m_ActionWheel.FindAction("ToggleWheel", throwIfNotFound: true);
        m_ActionWheel_Navigate = m_ActionWheel.FindAction("Navigate", throwIfNotFound: true);
        m_ActionWheel_Back = m_ActionWheel.FindAction("Back", throwIfNotFound: true);
        m_ActionWheel_Option1 = m_ActionWheel.FindAction("Option1", throwIfNotFound: true);
        m_ActionWheel_Option2 = m_ActionWheel.FindAction("Option2", throwIfNotFound: true);
        m_ActionWheel_Option3 = m_ActionWheel.FindAction("Option3", throwIfNotFound: true);
        m_ActionWheel_Option4 = m_ActionWheel.FindAction("Option4", throwIfNotFound: true);
        m_ActionWheel_Option5 = m_ActionWheel.FindAction("Option5", throwIfNotFound: true);
        m_ActionWheel_Option6 = m_ActionWheel.FindAction("Option6", throwIfNotFound: true);
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Rotate = m_Camera.FindAction("Rotate", throwIfNotFound: true);
        m_Camera_MoveHorizontal = m_Camera.FindAction("MoveHorizontal", throwIfNotFound: true);
        m_Camera_MoveVertical = m_Camera.FindAction("MoveVertical", throwIfNotFound: true);
        m_Camera_ResetRotation = m_Camera.FindAction("ResetRotation", throwIfNotFound: true);
        m_Camera_FreeLook = m_Camera.FindAction("FreeLook", throwIfNotFound: true);
        m_Camera_ToggleAim = m_Camera.FindAction("ToggleAim", throwIfNotFound: true);
        m_Camera_HoldAim = m_Camera.FindAction("HoldAim", throwIfNotFound: true);
        m_Camera_ToggleViewMode = m_Camera.FindAction("ToggleViewMode", throwIfNotFound: true);
        m_Camera_ToggleDynamic = m_Camera.FindAction("ToggleDynamic", throwIfNotFound: true);
        m_Camera_LookBehind = m_Camera.FindAction("LookBehind", throwIfNotFound: true);
        m_Camera_Unlock = m_Camera.FindAction("Unlock", throwIfNotFound: true);
        m_Camera_Speed = m_Camera.FindAction("Speed", throwIfNotFound: true);
        m_Camera_MoveAtMaxSpeed = m_Camera.FindAction("MoveAtMaxSpeed", throwIfNotFound: true);
        m_Camera_CustomCamera1 = m_Camera.FindAction("CustomCamera1", throwIfNotFound: true);
        m_Camera_CustomCamera2 = m_Camera.FindAction("CustomCamera2", throwIfNotFound: true);
        m_Camera_CustomCamera3 = m_Camera.FindAction("CustomCamera3", throwIfNotFound: true);
        m_Camera_CustomCamera4 = m_Camera.FindAction("CustomCamera4", throwIfNotFound: true);
        m_Camera_CustomCamera5 = m_Camera.FindAction("CustomCamera5", throwIfNotFound: true);
        m_Camera_CustomCamera6 = m_Camera.FindAction("CustomCamera6", throwIfNotFound: true);
        m_Camera_ZoomRelativeAxis = m_Camera.FindAction("ZoomRelativeAxis", throwIfNotFound: true);
        m_Camera_TimeScaleRelative = m_Camera.FindAction("TimeScaleRelative", throwIfNotFound: true);
        m_Camera_PauseTime = m_Camera.FindAction("PauseTime", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_OpenPauseScreen = m_Menu.FindAction("OpenPauseScreen", throwIfNotFound: true);
        m_Menu_HideUI = m_Menu.FindAction("HideUI", throwIfNotFound: true);
        m_Menu_CamEditor = m_Menu.FindAction("CamEditor", throwIfNotFound: true);
        m_Menu_PhotoMode = m_Menu.FindAction("PhotoMode", throwIfNotFound: true);
        m_Menu_Screenshot = m_Menu.FindAction("Screenshot", throwIfNotFound: true);
        m_Menu_NextSquadron = m_Menu.FindAction("NextSquadron", throwIfNotFound: true);
        m_Menu_PreviousSquadron = m_Menu.FindAction("PreviousSquadron", throwIfNotFound: true);
        m_Menu_NextWing = m_Menu.FindAction("NextWing", throwIfNotFound: true);
        m_Menu_PreviousWing = m_Menu.FindAction("PreviousWing", throwIfNotFound: true);
    }

    ~@Actions()
    {
        UnityEngine.Debug.Assert(!m_Pilot.enabled, "This will cause a leak and performance issues, Actions.Pilot.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Gunner.enabled, "This will cause a leak and performance issues, Actions.Gunner.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Bomber.enabled, "This will cause a leak and performance issues, Actions.Bomber.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_AnySeat.enabled, "This will cause a leak and performance issues, Actions.AnySeat.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_ActionWheel.enabled, "This will cause a leak and performance issues, Actions.ActionWheel.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Camera.enabled, "This will cause a leak and performance issues, Actions.Camera.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Menu.enabled, "This will cause a leak and performance issues, Actions.Menu.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Pilot
    private readonly InputActionMap m_Pilot;
    private List<IPilotActions> m_PilotActionsCallbackInterfaces = new List<IPilotActions>();
    private readonly InputAction m_Pilot_Pitch;
    private readonly InputAction m_Pilot_Roll;
    private readonly InputAction m_Pilot_Rudder;
    private readonly InputAction m_Pilot_ThrottleRelative;
    private readonly InputAction m_Pilot_ThrottleRaw;
    private readonly InputAction m_Pilot_FlapsRelative;
    private readonly InputAction m_Pilot_FlapsRaw;
    private readonly InputAction m_Pilot_FireGuns;
    private readonly InputAction m_Pilot_FirePrimaries;
    private readonly InputAction m_Pilot_FireSecondaries;
    private readonly InputAction m_Pilot_Bomb;
    private readonly InputAction m_Pilot_Rocket;
    private readonly InputAction m_Pilot_Brake;
    private readonly InputAction m_Pilot_EngineToggle;
    private readonly InputAction m_Pilot_Canopy;
    private readonly InputAction m_Pilot_BombBay;
    private readonly InputAction m_Pilot_Airbrakes;
    private readonly InputAction m_Pilot_LandingGear;
    /// <summary>
    /// Provides access to input actions defined in input action map "Pilot".
    /// </summary>
    public struct PilotActions
    {
        private @Actions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public PilotActions(@Actions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Pilot/Pitch".
        /// </summary>
        public InputAction @Pitch => m_Wrapper.m_Pilot_Pitch;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/Roll".
        /// </summary>
        public InputAction @Roll => m_Wrapper.m_Pilot_Roll;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/Rudder".
        /// </summary>
        public InputAction @Rudder => m_Wrapper.m_Pilot_Rudder;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/ThrottleRelative".
        /// </summary>
        public InputAction @ThrottleRelative => m_Wrapper.m_Pilot_ThrottleRelative;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/ThrottleRaw".
        /// </summary>
        public InputAction @ThrottleRaw => m_Wrapper.m_Pilot_ThrottleRaw;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/FlapsRelative".
        /// </summary>
        public InputAction @FlapsRelative => m_Wrapper.m_Pilot_FlapsRelative;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/FlapsRaw".
        /// </summary>
        public InputAction @FlapsRaw => m_Wrapper.m_Pilot_FlapsRaw;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/FireGuns".
        /// </summary>
        public InputAction @FireGuns => m_Wrapper.m_Pilot_FireGuns;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/FirePrimaries".
        /// </summary>
        public InputAction @FirePrimaries => m_Wrapper.m_Pilot_FirePrimaries;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/FireSecondaries".
        /// </summary>
        public InputAction @FireSecondaries => m_Wrapper.m_Pilot_FireSecondaries;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/Bomb".
        /// </summary>
        public InputAction @Bomb => m_Wrapper.m_Pilot_Bomb;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/Rocket".
        /// </summary>
        public InputAction @Rocket => m_Wrapper.m_Pilot_Rocket;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/Brake".
        /// </summary>
        public InputAction @Brake => m_Wrapper.m_Pilot_Brake;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/EngineToggle".
        /// </summary>
        public InputAction @EngineToggle => m_Wrapper.m_Pilot_EngineToggle;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/Canopy".
        /// </summary>
        public InputAction @Canopy => m_Wrapper.m_Pilot_Canopy;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/BombBay".
        /// </summary>
        public InputAction @BombBay => m_Wrapper.m_Pilot_BombBay;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/Airbrakes".
        /// </summary>
        public InputAction @Airbrakes => m_Wrapper.m_Pilot_Airbrakes;
        /// <summary>
        /// Provides access to the underlying input action "Pilot/LandingGear".
        /// </summary>
        public InputAction @LandingGear => m_Wrapper.m_Pilot_LandingGear;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Pilot; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="PilotActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(PilotActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="PilotActions" />
        public void AddCallbacks(IPilotActions instance)
        {
            if (instance == null || m_Wrapper.m_PilotActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PilotActionsCallbackInterfaces.Add(instance);
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Rudder.started += instance.OnRudder;
            @Rudder.performed += instance.OnRudder;
            @Rudder.canceled += instance.OnRudder;
            @ThrottleRelative.started += instance.OnThrottleRelative;
            @ThrottleRelative.performed += instance.OnThrottleRelative;
            @ThrottleRelative.canceled += instance.OnThrottleRelative;
            @ThrottleRaw.started += instance.OnThrottleRaw;
            @ThrottleRaw.performed += instance.OnThrottleRaw;
            @ThrottleRaw.canceled += instance.OnThrottleRaw;
            @FlapsRelative.started += instance.OnFlapsRelative;
            @FlapsRelative.performed += instance.OnFlapsRelative;
            @FlapsRelative.canceled += instance.OnFlapsRelative;
            @FlapsRaw.started += instance.OnFlapsRaw;
            @FlapsRaw.performed += instance.OnFlapsRaw;
            @FlapsRaw.canceled += instance.OnFlapsRaw;
            @FireGuns.started += instance.OnFireGuns;
            @FireGuns.performed += instance.OnFireGuns;
            @FireGuns.canceled += instance.OnFireGuns;
            @FirePrimaries.started += instance.OnFirePrimaries;
            @FirePrimaries.performed += instance.OnFirePrimaries;
            @FirePrimaries.canceled += instance.OnFirePrimaries;
            @FireSecondaries.started += instance.OnFireSecondaries;
            @FireSecondaries.performed += instance.OnFireSecondaries;
            @FireSecondaries.canceled += instance.OnFireSecondaries;
            @Bomb.started += instance.OnBomb;
            @Bomb.performed += instance.OnBomb;
            @Bomb.canceled += instance.OnBomb;
            @Rocket.started += instance.OnRocket;
            @Rocket.performed += instance.OnRocket;
            @Rocket.canceled += instance.OnRocket;
            @Brake.started += instance.OnBrake;
            @Brake.performed += instance.OnBrake;
            @Brake.canceled += instance.OnBrake;
            @EngineToggle.started += instance.OnEngineToggle;
            @EngineToggle.performed += instance.OnEngineToggle;
            @EngineToggle.canceled += instance.OnEngineToggle;
            @Canopy.started += instance.OnCanopy;
            @Canopy.performed += instance.OnCanopy;
            @Canopy.canceled += instance.OnCanopy;
            @BombBay.started += instance.OnBombBay;
            @BombBay.performed += instance.OnBombBay;
            @BombBay.canceled += instance.OnBombBay;
            @Airbrakes.started += instance.OnAirbrakes;
            @Airbrakes.performed += instance.OnAirbrakes;
            @Airbrakes.canceled += instance.OnAirbrakes;
            @LandingGear.started += instance.OnLandingGear;
            @LandingGear.performed += instance.OnLandingGear;
            @LandingGear.canceled += instance.OnLandingGear;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="PilotActions" />
        private void UnregisterCallbacks(IPilotActions instance)
        {
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Rudder.started -= instance.OnRudder;
            @Rudder.performed -= instance.OnRudder;
            @Rudder.canceled -= instance.OnRudder;
            @ThrottleRelative.started -= instance.OnThrottleRelative;
            @ThrottleRelative.performed -= instance.OnThrottleRelative;
            @ThrottleRelative.canceled -= instance.OnThrottleRelative;
            @ThrottleRaw.started -= instance.OnThrottleRaw;
            @ThrottleRaw.performed -= instance.OnThrottleRaw;
            @ThrottleRaw.canceled -= instance.OnThrottleRaw;
            @FlapsRelative.started -= instance.OnFlapsRelative;
            @FlapsRelative.performed -= instance.OnFlapsRelative;
            @FlapsRelative.canceled -= instance.OnFlapsRelative;
            @FlapsRaw.started -= instance.OnFlapsRaw;
            @FlapsRaw.performed -= instance.OnFlapsRaw;
            @FlapsRaw.canceled -= instance.OnFlapsRaw;
            @FireGuns.started -= instance.OnFireGuns;
            @FireGuns.performed -= instance.OnFireGuns;
            @FireGuns.canceled -= instance.OnFireGuns;
            @FirePrimaries.started -= instance.OnFirePrimaries;
            @FirePrimaries.performed -= instance.OnFirePrimaries;
            @FirePrimaries.canceled -= instance.OnFirePrimaries;
            @FireSecondaries.started -= instance.OnFireSecondaries;
            @FireSecondaries.performed -= instance.OnFireSecondaries;
            @FireSecondaries.canceled -= instance.OnFireSecondaries;
            @Bomb.started -= instance.OnBomb;
            @Bomb.performed -= instance.OnBomb;
            @Bomb.canceled -= instance.OnBomb;
            @Rocket.started -= instance.OnRocket;
            @Rocket.performed -= instance.OnRocket;
            @Rocket.canceled -= instance.OnRocket;
            @Brake.started -= instance.OnBrake;
            @Brake.performed -= instance.OnBrake;
            @Brake.canceled -= instance.OnBrake;
            @EngineToggle.started -= instance.OnEngineToggle;
            @EngineToggle.performed -= instance.OnEngineToggle;
            @EngineToggle.canceled -= instance.OnEngineToggle;
            @Canopy.started -= instance.OnCanopy;
            @Canopy.performed -= instance.OnCanopy;
            @Canopy.canceled -= instance.OnCanopy;
            @BombBay.started -= instance.OnBombBay;
            @BombBay.performed -= instance.OnBombBay;
            @BombBay.canceled -= instance.OnBombBay;
            @Airbrakes.started -= instance.OnAirbrakes;
            @Airbrakes.performed -= instance.OnAirbrakes;
            @Airbrakes.canceled -= instance.OnAirbrakes;
            @LandingGear.started -= instance.OnLandingGear;
            @LandingGear.performed -= instance.OnLandingGear;
            @LandingGear.canceled -= instance.OnLandingGear;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="PilotActions.UnregisterCallbacks(IPilotActions)" />.
        /// </summary>
        /// <seealso cref="PilotActions.UnregisterCallbacks(IPilotActions)" />
        public void RemoveCallbacks(IPilotActions instance)
        {
            if (m_Wrapper.m_PilotActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="PilotActions.AddCallbacks(IPilotActions)" />
        /// <seealso cref="PilotActions.RemoveCallbacks(IPilotActions)" />
        /// <seealso cref="PilotActions.UnregisterCallbacks(IPilotActions)" />
        public void SetCallbacks(IPilotActions instance)
        {
            foreach (var item in m_Wrapper.m_PilotActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PilotActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="PilotActions" /> instance referencing this action map.
    /// </summary>
    public PilotActions @Pilot => new PilotActions(this);

    // Gunner
    private readonly InputActionMap m_Gunner;
    private List<IGunnerActions> m_GunnerActionsCallbackInterfaces = new List<IGunnerActions>();
    private readonly InputAction m_Gunner_Fire;
    private readonly InputAction m_Gunner_RotateHorizontal;
    private readonly InputAction m_Gunner_RotateVertical;
    private readonly InputAction m_Gunner_SpecialAxis;
    private readonly InputAction m_Gunner_Hydraulics;
    /// <summary>
    /// Provides access to input actions defined in input action map "Gunner".
    /// </summary>
    public struct GunnerActions
    {
        private @Actions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public GunnerActions(@Actions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Gunner/Fire".
        /// </summary>
        public InputAction @Fire => m_Wrapper.m_Gunner_Fire;
        /// <summary>
        /// Provides access to the underlying input action "Gunner/RotateHorizontal".
        /// </summary>
        public InputAction @RotateHorizontal => m_Wrapper.m_Gunner_RotateHorizontal;
        /// <summary>
        /// Provides access to the underlying input action "Gunner/RotateVertical".
        /// </summary>
        public InputAction @RotateVertical => m_Wrapper.m_Gunner_RotateVertical;
        /// <summary>
        /// Provides access to the underlying input action "Gunner/SpecialAxis".
        /// </summary>
        public InputAction @SpecialAxis => m_Wrapper.m_Gunner_SpecialAxis;
        /// <summary>
        /// Provides access to the underlying input action "Gunner/Hydraulics".
        /// </summary>
        public InputAction @Hydraulics => m_Wrapper.m_Gunner_Hydraulics;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Gunner; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="GunnerActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(GunnerActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="GunnerActions" />
        public void AddCallbacks(IGunnerActions instance)
        {
            if (instance == null || m_Wrapper.m_GunnerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GunnerActionsCallbackInterfaces.Add(instance);
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @RotateHorizontal.started += instance.OnRotateHorizontal;
            @RotateHorizontal.performed += instance.OnRotateHorizontal;
            @RotateHorizontal.canceled += instance.OnRotateHorizontal;
            @RotateVertical.started += instance.OnRotateVertical;
            @RotateVertical.performed += instance.OnRotateVertical;
            @RotateVertical.canceled += instance.OnRotateVertical;
            @SpecialAxis.started += instance.OnSpecialAxis;
            @SpecialAxis.performed += instance.OnSpecialAxis;
            @SpecialAxis.canceled += instance.OnSpecialAxis;
            @Hydraulics.started += instance.OnHydraulics;
            @Hydraulics.performed += instance.OnHydraulics;
            @Hydraulics.canceled += instance.OnHydraulics;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="GunnerActions" />
        private void UnregisterCallbacks(IGunnerActions instance)
        {
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @RotateHorizontal.started -= instance.OnRotateHorizontal;
            @RotateHorizontal.performed -= instance.OnRotateHorizontal;
            @RotateHorizontal.canceled -= instance.OnRotateHorizontal;
            @RotateVertical.started -= instance.OnRotateVertical;
            @RotateVertical.performed -= instance.OnRotateVertical;
            @RotateVertical.canceled -= instance.OnRotateVertical;
            @SpecialAxis.started -= instance.OnSpecialAxis;
            @SpecialAxis.performed -= instance.OnSpecialAxis;
            @SpecialAxis.canceled -= instance.OnSpecialAxis;
            @Hydraulics.started -= instance.OnHydraulics;
            @Hydraulics.performed -= instance.OnHydraulics;
            @Hydraulics.canceled -= instance.OnHydraulics;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="GunnerActions.UnregisterCallbacks(IGunnerActions)" />.
        /// </summary>
        /// <seealso cref="GunnerActions.UnregisterCallbacks(IGunnerActions)" />
        public void RemoveCallbacks(IGunnerActions instance)
        {
            if (m_Wrapper.m_GunnerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="GunnerActions.AddCallbacks(IGunnerActions)" />
        /// <seealso cref="GunnerActions.RemoveCallbacks(IGunnerActions)" />
        /// <seealso cref="GunnerActions.UnregisterCallbacks(IGunnerActions)" />
        public void SetCallbacks(IGunnerActions instance)
        {
            foreach (var item in m_Wrapper.m_GunnerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GunnerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="GunnerActions" /> instance referencing this action map.
    /// </summary>
    public GunnerActions @Gunner => new GunnerActions(this);

    // Bomber
    private readonly InputActionMap m_Bomber;
    private List<IBomberActions> m_BomberActionsCallbackInterfaces = new List<IBomberActions>();
    private readonly InputAction m_Bomber_RotateSightView;
    private readonly InputAction m_Bomber_Rudder;
    private readonly InputAction m_Bomber_BombSightMode;
    private readonly InputAction m_Bomber_Interval;
    private readonly InputAction m_Bomber_Quantity;
    private readonly InputAction m_Bomber_Bomb;
    private readonly InputAction m_Bomber_BombBay;
    /// <summary>
    /// Provides access to input actions defined in input action map "Bomber".
    /// </summary>
    public struct BomberActions
    {
        private @Actions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public BomberActions(@Actions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Bomber/RotateSightView".
        /// </summary>
        public InputAction @RotateSightView => m_Wrapper.m_Bomber_RotateSightView;
        /// <summary>
        /// Provides access to the underlying input action "Bomber/Rudder".
        /// </summary>
        public InputAction @Rudder => m_Wrapper.m_Bomber_Rudder;
        /// <summary>
        /// Provides access to the underlying input action "Bomber/BombSightMode".
        /// </summary>
        public InputAction @BombSightMode => m_Wrapper.m_Bomber_BombSightMode;
        /// <summary>
        /// Provides access to the underlying input action "Bomber/Interval".
        /// </summary>
        public InputAction @Interval => m_Wrapper.m_Bomber_Interval;
        /// <summary>
        /// Provides access to the underlying input action "Bomber/Quantity".
        /// </summary>
        public InputAction @Quantity => m_Wrapper.m_Bomber_Quantity;
        /// <summary>
        /// Provides access to the underlying input action "Bomber/Bomb".
        /// </summary>
        public InputAction @Bomb => m_Wrapper.m_Bomber_Bomb;
        /// <summary>
        /// Provides access to the underlying input action "Bomber/BombBay".
        /// </summary>
        public InputAction @BombBay => m_Wrapper.m_Bomber_BombBay;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Bomber; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="BomberActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(BomberActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="BomberActions" />
        public void AddCallbacks(IBomberActions instance)
        {
            if (instance == null || m_Wrapper.m_BomberActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BomberActionsCallbackInterfaces.Add(instance);
            @RotateSightView.started += instance.OnRotateSightView;
            @RotateSightView.performed += instance.OnRotateSightView;
            @RotateSightView.canceled += instance.OnRotateSightView;
            @Rudder.started += instance.OnRudder;
            @Rudder.performed += instance.OnRudder;
            @Rudder.canceled += instance.OnRudder;
            @BombSightMode.started += instance.OnBombSightMode;
            @BombSightMode.performed += instance.OnBombSightMode;
            @BombSightMode.canceled += instance.OnBombSightMode;
            @Interval.started += instance.OnInterval;
            @Interval.performed += instance.OnInterval;
            @Interval.canceled += instance.OnInterval;
            @Quantity.started += instance.OnQuantity;
            @Quantity.performed += instance.OnQuantity;
            @Quantity.canceled += instance.OnQuantity;
            @Bomb.started += instance.OnBomb;
            @Bomb.performed += instance.OnBomb;
            @Bomb.canceled += instance.OnBomb;
            @BombBay.started += instance.OnBombBay;
            @BombBay.performed += instance.OnBombBay;
            @BombBay.canceled += instance.OnBombBay;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="BomberActions" />
        private void UnregisterCallbacks(IBomberActions instance)
        {
            @RotateSightView.started -= instance.OnRotateSightView;
            @RotateSightView.performed -= instance.OnRotateSightView;
            @RotateSightView.canceled -= instance.OnRotateSightView;
            @Rudder.started -= instance.OnRudder;
            @Rudder.performed -= instance.OnRudder;
            @Rudder.canceled -= instance.OnRudder;
            @BombSightMode.started -= instance.OnBombSightMode;
            @BombSightMode.performed -= instance.OnBombSightMode;
            @BombSightMode.canceled -= instance.OnBombSightMode;
            @Interval.started -= instance.OnInterval;
            @Interval.performed -= instance.OnInterval;
            @Interval.canceled -= instance.OnInterval;
            @Quantity.started -= instance.OnQuantity;
            @Quantity.performed -= instance.OnQuantity;
            @Quantity.canceled -= instance.OnQuantity;
            @Bomb.started -= instance.OnBomb;
            @Bomb.performed -= instance.OnBomb;
            @Bomb.canceled -= instance.OnBomb;
            @BombBay.started -= instance.OnBombBay;
            @BombBay.performed -= instance.OnBombBay;
            @BombBay.canceled -= instance.OnBombBay;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="BomberActions.UnregisterCallbacks(IBomberActions)" />.
        /// </summary>
        /// <seealso cref="BomberActions.UnregisterCallbacks(IBomberActions)" />
        public void RemoveCallbacks(IBomberActions instance)
        {
            if (m_Wrapper.m_BomberActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="BomberActions.AddCallbacks(IBomberActions)" />
        /// <seealso cref="BomberActions.RemoveCallbacks(IBomberActions)" />
        /// <seealso cref="BomberActions.UnregisterCallbacks(IBomberActions)" />
        public void SetCallbacks(IBomberActions instance)
        {
            foreach (var item in m_Wrapper.m_BomberActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BomberActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="BomberActions" /> instance referencing this action map.
    /// </summary>
    public BomberActions @Bomber => new BomberActions(this);

    // AnySeat
    private readonly InputActionMap m_AnySeat;
    private List<IAnySeatActions> m_AnySeatActionsCallbackInterfaces = new List<IAnySeatActions>();
    private readonly InputAction m_AnySeat_Reload;
    private readonly InputAction m_AnySeat_BailOut;
    private readonly InputAction m_AnySeat_SwitchSeat;
    private readonly InputAction m_AnySeat_ScrollWheel;
    private readonly InputAction m_AnySeat_CycleCrew;
    private readonly InputAction m_AnySeat_NextCrew;
    private readonly InputAction m_AnySeat_PreviousCrew;
    private readonly InputAction m_AnySeat_ToBombardier;
    private readonly InputAction m_AnySeat_Pilot;
    private readonly InputAction m_AnySeat_Crew2;
    private readonly InputAction m_AnySeat_Crew3;
    private readonly InputAction m_AnySeat_Crew4;
    private readonly InputAction m_AnySeat_Crew5;
    private readonly InputAction m_AnySeat_Crew6;
    private readonly InputAction m_AnySeat_Crew7;
    private readonly InputAction m_AnySeat_Crew8;
    private readonly InputAction m_AnySeat_Crew9;
    private readonly InputAction m_AnySeat_Crew10;
    private readonly InputAction m_AnySeat_Crew11;
    private readonly InputAction m_AnySeat_Crew12;
    /// <summary>
    /// Provides access to input actions defined in input action map "AnySeat".
    /// </summary>
    public struct AnySeatActions
    {
        private @Actions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public AnySeatActions(@Actions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Reload".
        /// </summary>
        public InputAction @Reload => m_Wrapper.m_AnySeat_Reload;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/BailOut".
        /// </summary>
        public InputAction @BailOut => m_Wrapper.m_AnySeat_BailOut;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/SwitchSeat".
        /// </summary>
        public InputAction @SwitchSeat => m_Wrapper.m_AnySeat_SwitchSeat;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/ScrollWheel".
        /// </summary>
        public InputAction @ScrollWheel => m_Wrapper.m_AnySeat_ScrollWheel;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/CycleCrew".
        /// </summary>
        public InputAction @CycleCrew => m_Wrapper.m_AnySeat_CycleCrew;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/NextCrew".
        /// </summary>
        public InputAction @NextCrew => m_Wrapper.m_AnySeat_NextCrew;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/PreviousCrew".
        /// </summary>
        public InputAction @PreviousCrew => m_Wrapper.m_AnySeat_PreviousCrew;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/ToBombardier".
        /// </summary>
        public InputAction @ToBombardier => m_Wrapper.m_AnySeat_ToBombardier;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Pilot".
        /// </summary>
        public InputAction @Pilot => m_Wrapper.m_AnySeat_Pilot;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew2".
        /// </summary>
        public InputAction @Crew2 => m_Wrapper.m_AnySeat_Crew2;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew3".
        /// </summary>
        public InputAction @Crew3 => m_Wrapper.m_AnySeat_Crew3;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew4".
        /// </summary>
        public InputAction @Crew4 => m_Wrapper.m_AnySeat_Crew4;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew5".
        /// </summary>
        public InputAction @Crew5 => m_Wrapper.m_AnySeat_Crew5;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew6".
        /// </summary>
        public InputAction @Crew6 => m_Wrapper.m_AnySeat_Crew6;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew7".
        /// </summary>
        public InputAction @Crew7 => m_Wrapper.m_AnySeat_Crew7;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew8".
        /// </summary>
        public InputAction @Crew8 => m_Wrapper.m_AnySeat_Crew8;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew9".
        /// </summary>
        public InputAction @Crew9 => m_Wrapper.m_AnySeat_Crew9;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew10".
        /// </summary>
        public InputAction @Crew10 => m_Wrapper.m_AnySeat_Crew10;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew11".
        /// </summary>
        public InputAction @Crew11 => m_Wrapper.m_AnySeat_Crew11;
        /// <summary>
        /// Provides access to the underlying input action "AnySeat/Crew12".
        /// </summary>
        public InputAction @Crew12 => m_Wrapper.m_AnySeat_Crew12;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_AnySeat; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="AnySeatActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(AnySeatActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="AnySeatActions" />
        public void AddCallbacks(IAnySeatActions instance)
        {
            if (instance == null || m_Wrapper.m_AnySeatActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AnySeatActionsCallbackInterfaces.Add(instance);
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @BailOut.started += instance.OnBailOut;
            @BailOut.performed += instance.OnBailOut;
            @BailOut.canceled += instance.OnBailOut;
            @SwitchSeat.started += instance.OnSwitchSeat;
            @SwitchSeat.performed += instance.OnSwitchSeat;
            @SwitchSeat.canceled += instance.OnSwitchSeat;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @CycleCrew.started += instance.OnCycleCrew;
            @CycleCrew.performed += instance.OnCycleCrew;
            @CycleCrew.canceled += instance.OnCycleCrew;
            @NextCrew.started += instance.OnNextCrew;
            @NextCrew.performed += instance.OnNextCrew;
            @NextCrew.canceled += instance.OnNextCrew;
            @PreviousCrew.started += instance.OnPreviousCrew;
            @PreviousCrew.performed += instance.OnPreviousCrew;
            @PreviousCrew.canceled += instance.OnPreviousCrew;
            @ToBombardier.started += instance.OnToBombardier;
            @ToBombardier.performed += instance.OnToBombardier;
            @ToBombardier.canceled += instance.OnToBombardier;
            @Pilot.started += instance.OnPilot;
            @Pilot.performed += instance.OnPilot;
            @Pilot.canceled += instance.OnPilot;
            @Crew2.started += instance.OnCrew2;
            @Crew2.performed += instance.OnCrew2;
            @Crew2.canceled += instance.OnCrew2;
            @Crew3.started += instance.OnCrew3;
            @Crew3.performed += instance.OnCrew3;
            @Crew3.canceled += instance.OnCrew3;
            @Crew4.started += instance.OnCrew4;
            @Crew4.performed += instance.OnCrew4;
            @Crew4.canceled += instance.OnCrew4;
            @Crew5.started += instance.OnCrew5;
            @Crew5.performed += instance.OnCrew5;
            @Crew5.canceled += instance.OnCrew5;
            @Crew6.started += instance.OnCrew6;
            @Crew6.performed += instance.OnCrew6;
            @Crew6.canceled += instance.OnCrew6;
            @Crew7.started += instance.OnCrew7;
            @Crew7.performed += instance.OnCrew7;
            @Crew7.canceled += instance.OnCrew7;
            @Crew8.started += instance.OnCrew8;
            @Crew8.performed += instance.OnCrew8;
            @Crew8.canceled += instance.OnCrew8;
            @Crew9.started += instance.OnCrew9;
            @Crew9.performed += instance.OnCrew9;
            @Crew9.canceled += instance.OnCrew9;
            @Crew10.started += instance.OnCrew10;
            @Crew10.performed += instance.OnCrew10;
            @Crew10.canceled += instance.OnCrew10;
            @Crew11.started += instance.OnCrew11;
            @Crew11.performed += instance.OnCrew11;
            @Crew11.canceled += instance.OnCrew11;
            @Crew12.started += instance.OnCrew12;
            @Crew12.performed += instance.OnCrew12;
            @Crew12.canceled += instance.OnCrew12;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="AnySeatActions" />
        private void UnregisterCallbacks(IAnySeatActions instance)
        {
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @BailOut.started -= instance.OnBailOut;
            @BailOut.performed -= instance.OnBailOut;
            @BailOut.canceled -= instance.OnBailOut;
            @SwitchSeat.started -= instance.OnSwitchSeat;
            @SwitchSeat.performed -= instance.OnSwitchSeat;
            @SwitchSeat.canceled -= instance.OnSwitchSeat;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @CycleCrew.started -= instance.OnCycleCrew;
            @CycleCrew.performed -= instance.OnCycleCrew;
            @CycleCrew.canceled -= instance.OnCycleCrew;
            @NextCrew.started -= instance.OnNextCrew;
            @NextCrew.performed -= instance.OnNextCrew;
            @NextCrew.canceled -= instance.OnNextCrew;
            @PreviousCrew.started -= instance.OnPreviousCrew;
            @PreviousCrew.performed -= instance.OnPreviousCrew;
            @PreviousCrew.canceled -= instance.OnPreviousCrew;
            @ToBombardier.started -= instance.OnToBombardier;
            @ToBombardier.performed -= instance.OnToBombardier;
            @ToBombardier.canceled -= instance.OnToBombardier;
            @Pilot.started -= instance.OnPilot;
            @Pilot.performed -= instance.OnPilot;
            @Pilot.canceled -= instance.OnPilot;
            @Crew2.started -= instance.OnCrew2;
            @Crew2.performed -= instance.OnCrew2;
            @Crew2.canceled -= instance.OnCrew2;
            @Crew3.started -= instance.OnCrew3;
            @Crew3.performed -= instance.OnCrew3;
            @Crew3.canceled -= instance.OnCrew3;
            @Crew4.started -= instance.OnCrew4;
            @Crew4.performed -= instance.OnCrew4;
            @Crew4.canceled -= instance.OnCrew4;
            @Crew5.started -= instance.OnCrew5;
            @Crew5.performed -= instance.OnCrew5;
            @Crew5.canceled -= instance.OnCrew5;
            @Crew6.started -= instance.OnCrew6;
            @Crew6.performed -= instance.OnCrew6;
            @Crew6.canceled -= instance.OnCrew6;
            @Crew7.started -= instance.OnCrew7;
            @Crew7.performed -= instance.OnCrew7;
            @Crew7.canceled -= instance.OnCrew7;
            @Crew8.started -= instance.OnCrew8;
            @Crew8.performed -= instance.OnCrew8;
            @Crew8.canceled -= instance.OnCrew8;
            @Crew9.started -= instance.OnCrew9;
            @Crew9.performed -= instance.OnCrew9;
            @Crew9.canceled -= instance.OnCrew9;
            @Crew10.started -= instance.OnCrew10;
            @Crew10.performed -= instance.OnCrew10;
            @Crew10.canceled -= instance.OnCrew10;
            @Crew11.started -= instance.OnCrew11;
            @Crew11.performed -= instance.OnCrew11;
            @Crew11.canceled -= instance.OnCrew11;
            @Crew12.started -= instance.OnCrew12;
            @Crew12.performed -= instance.OnCrew12;
            @Crew12.canceled -= instance.OnCrew12;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="AnySeatActions.UnregisterCallbacks(IAnySeatActions)" />.
        /// </summary>
        /// <seealso cref="AnySeatActions.UnregisterCallbacks(IAnySeatActions)" />
        public void RemoveCallbacks(IAnySeatActions instance)
        {
            if (m_Wrapper.m_AnySeatActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="AnySeatActions.AddCallbacks(IAnySeatActions)" />
        /// <seealso cref="AnySeatActions.RemoveCallbacks(IAnySeatActions)" />
        /// <seealso cref="AnySeatActions.UnregisterCallbacks(IAnySeatActions)" />
        public void SetCallbacks(IAnySeatActions instance)
        {
            foreach (var item in m_Wrapper.m_AnySeatActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AnySeatActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="AnySeatActions" /> instance referencing this action map.
    /// </summary>
    public AnySeatActions @AnySeat => new AnySeatActions(this);

    // ActionWheel
    private readonly InputActionMap m_ActionWheel;
    private List<IActionWheelActions> m_ActionWheelActionsCallbackInterfaces = new List<IActionWheelActions>();
    private readonly InputAction m_ActionWheel_ToggleWheel;
    private readonly InputAction m_ActionWheel_Navigate;
    private readonly InputAction m_ActionWheel_Back;
    private readonly InputAction m_ActionWheel_Option1;
    private readonly InputAction m_ActionWheel_Option2;
    private readonly InputAction m_ActionWheel_Option3;
    private readonly InputAction m_ActionWheel_Option4;
    private readonly InputAction m_ActionWheel_Option5;
    private readonly InputAction m_ActionWheel_Option6;
    /// <summary>
    /// Provides access to input actions defined in input action map "ActionWheel".
    /// </summary>
    public struct ActionWheelActions
    {
        private @Actions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public ActionWheelActions(@Actions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/ToggleWheel".
        /// </summary>
        public InputAction @ToggleWheel => m_Wrapper.m_ActionWheel_ToggleWheel;
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/Navigate".
        /// </summary>
        public InputAction @Navigate => m_Wrapper.m_ActionWheel_Navigate;
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/Back".
        /// </summary>
        public InputAction @Back => m_Wrapper.m_ActionWheel_Back;
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/Option1".
        /// </summary>
        public InputAction @Option1 => m_Wrapper.m_ActionWheel_Option1;
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/Option2".
        /// </summary>
        public InputAction @Option2 => m_Wrapper.m_ActionWheel_Option2;
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/Option3".
        /// </summary>
        public InputAction @Option3 => m_Wrapper.m_ActionWheel_Option3;
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/Option4".
        /// </summary>
        public InputAction @Option4 => m_Wrapper.m_ActionWheel_Option4;
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/Option5".
        /// </summary>
        public InputAction @Option5 => m_Wrapper.m_ActionWheel_Option5;
        /// <summary>
        /// Provides access to the underlying input action "ActionWheel/Option6".
        /// </summary>
        public InputAction @Option6 => m_Wrapper.m_ActionWheel_Option6;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_ActionWheel; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="ActionWheelActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(ActionWheelActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="ActionWheelActions" />
        public void AddCallbacks(IActionWheelActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionWheelActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionWheelActionsCallbackInterfaces.Add(instance);
            @ToggleWheel.started += instance.OnToggleWheel;
            @ToggleWheel.performed += instance.OnToggleWheel;
            @ToggleWheel.canceled += instance.OnToggleWheel;
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @Option1.started += instance.OnOption1;
            @Option1.performed += instance.OnOption1;
            @Option1.canceled += instance.OnOption1;
            @Option2.started += instance.OnOption2;
            @Option2.performed += instance.OnOption2;
            @Option2.canceled += instance.OnOption2;
            @Option3.started += instance.OnOption3;
            @Option3.performed += instance.OnOption3;
            @Option3.canceled += instance.OnOption3;
            @Option4.started += instance.OnOption4;
            @Option4.performed += instance.OnOption4;
            @Option4.canceled += instance.OnOption4;
            @Option5.started += instance.OnOption5;
            @Option5.performed += instance.OnOption5;
            @Option5.canceled += instance.OnOption5;
            @Option6.started += instance.OnOption6;
            @Option6.performed += instance.OnOption6;
            @Option6.canceled += instance.OnOption6;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="ActionWheelActions" />
        private void UnregisterCallbacks(IActionWheelActions instance)
        {
            @ToggleWheel.started -= instance.OnToggleWheel;
            @ToggleWheel.performed -= instance.OnToggleWheel;
            @ToggleWheel.canceled -= instance.OnToggleWheel;
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @Option1.started -= instance.OnOption1;
            @Option1.performed -= instance.OnOption1;
            @Option1.canceled -= instance.OnOption1;
            @Option2.started -= instance.OnOption2;
            @Option2.performed -= instance.OnOption2;
            @Option2.canceled -= instance.OnOption2;
            @Option3.started -= instance.OnOption3;
            @Option3.performed -= instance.OnOption3;
            @Option3.canceled -= instance.OnOption3;
            @Option4.started -= instance.OnOption4;
            @Option4.performed -= instance.OnOption4;
            @Option4.canceled -= instance.OnOption4;
            @Option5.started -= instance.OnOption5;
            @Option5.performed -= instance.OnOption5;
            @Option5.canceled -= instance.OnOption5;
            @Option6.started -= instance.OnOption6;
            @Option6.performed -= instance.OnOption6;
            @Option6.canceled -= instance.OnOption6;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="ActionWheelActions.UnregisterCallbacks(IActionWheelActions)" />.
        /// </summary>
        /// <seealso cref="ActionWheelActions.UnregisterCallbacks(IActionWheelActions)" />
        public void RemoveCallbacks(IActionWheelActions instance)
        {
            if (m_Wrapper.m_ActionWheelActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="ActionWheelActions.AddCallbacks(IActionWheelActions)" />
        /// <seealso cref="ActionWheelActions.RemoveCallbacks(IActionWheelActions)" />
        /// <seealso cref="ActionWheelActions.UnregisterCallbacks(IActionWheelActions)" />
        public void SetCallbacks(IActionWheelActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionWheelActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionWheelActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="ActionWheelActions" /> instance referencing this action map.
    /// </summary>
    public ActionWheelActions @ActionWheel => new ActionWheelActions(this);

    // Camera
    private readonly InputActionMap m_Camera;
    private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
    private readonly InputAction m_Camera_Rotate;
    private readonly InputAction m_Camera_MoveHorizontal;
    private readonly InputAction m_Camera_MoveVertical;
    private readonly InputAction m_Camera_ResetRotation;
    private readonly InputAction m_Camera_FreeLook;
    private readonly InputAction m_Camera_ToggleAim;
    private readonly InputAction m_Camera_HoldAim;
    private readonly InputAction m_Camera_ToggleViewMode;
    private readonly InputAction m_Camera_ToggleDynamic;
    private readonly InputAction m_Camera_LookBehind;
    private readonly InputAction m_Camera_Unlock;
    private readonly InputAction m_Camera_Speed;
    private readonly InputAction m_Camera_MoveAtMaxSpeed;
    private readonly InputAction m_Camera_CustomCamera1;
    private readonly InputAction m_Camera_CustomCamera2;
    private readonly InputAction m_Camera_CustomCamera3;
    private readonly InputAction m_Camera_CustomCamera4;
    private readonly InputAction m_Camera_CustomCamera5;
    private readonly InputAction m_Camera_CustomCamera6;
    private readonly InputAction m_Camera_ZoomRelativeAxis;
    private readonly InputAction m_Camera_TimeScaleRelative;
    private readonly InputAction m_Camera_PauseTime;
    /// <summary>
    /// Provides access to input actions defined in input action map "Camera".
    /// </summary>
    public struct CameraActions
    {
        private @Actions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public CameraActions(@Actions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Camera/Rotate".
        /// </summary>
        public InputAction @Rotate => m_Wrapper.m_Camera_Rotate;
        /// <summary>
        /// Provides access to the underlying input action "Camera/MoveHorizontal".
        /// </summary>
        public InputAction @MoveHorizontal => m_Wrapper.m_Camera_MoveHorizontal;
        /// <summary>
        /// Provides access to the underlying input action "Camera/MoveVertical".
        /// </summary>
        public InputAction @MoveVertical => m_Wrapper.m_Camera_MoveVertical;
        /// <summary>
        /// Provides access to the underlying input action "Camera/ResetRotation".
        /// </summary>
        public InputAction @ResetRotation => m_Wrapper.m_Camera_ResetRotation;
        /// <summary>
        /// Provides access to the underlying input action "Camera/FreeLook".
        /// </summary>
        public InputAction @FreeLook => m_Wrapper.m_Camera_FreeLook;
        /// <summary>
        /// Provides access to the underlying input action "Camera/ToggleAim".
        /// </summary>
        public InputAction @ToggleAim => m_Wrapper.m_Camera_ToggleAim;
        /// <summary>
        /// Provides access to the underlying input action "Camera/HoldAim".
        /// </summary>
        public InputAction @HoldAim => m_Wrapper.m_Camera_HoldAim;
        /// <summary>
        /// Provides access to the underlying input action "Camera/ToggleViewMode".
        /// </summary>
        public InputAction @ToggleViewMode => m_Wrapper.m_Camera_ToggleViewMode;
        /// <summary>
        /// Provides access to the underlying input action "Camera/ToggleDynamic".
        /// </summary>
        public InputAction @ToggleDynamic => m_Wrapper.m_Camera_ToggleDynamic;
        /// <summary>
        /// Provides access to the underlying input action "Camera/LookBehind".
        /// </summary>
        public InputAction @LookBehind => m_Wrapper.m_Camera_LookBehind;
        /// <summary>
        /// Provides access to the underlying input action "Camera/Unlock".
        /// </summary>
        public InputAction @Unlock => m_Wrapper.m_Camera_Unlock;
        /// <summary>
        /// Provides access to the underlying input action "Camera/Speed".
        /// </summary>
        public InputAction @Speed => m_Wrapper.m_Camera_Speed;
        /// <summary>
        /// Provides access to the underlying input action "Camera/MoveAtMaxSpeed".
        /// </summary>
        public InputAction @MoveAtMaxSpeed => m_Wrapper.m_Camera_MoveAtMaxSpeed;
        /// <summary>
        /// Provides access to the underlying input action "Camera/CustomCamera1".
        /// </summary>
        public InputAction @CustomCamera1 => m_Wrapper.m_Camera_CustomCamera1;
        /// <summary>
        /// Provides access to the underlying input action "Camera/CustomCamera2".
        /// </summary>
        public InputAction @CustomCamera2 => m_Wrapper.m_Camera_CustomCamera2;
        /// <summary>
        /// Provides access to the underlying input action "Camera/CustomCamera3".
        /// </summary>
        public InputAction @CustomCamera3 => m_Wrapper.m_Camera_CustomCamera3;
        /// <summary>
        /// Provides access to the underlying input action "Camera/CustomCamera4".
        /// </summary>
        public InputAction @CustomCamera4 => m_Wrapper.m_Camera_CustomCamera4;
        /// <summary>
        /// Provides access to the underlying input action "Camera/CustomCamera5".
        /// </summary>
        public InputAction @CustomCamera5 => m_Wrapper.m_Camera_CustomCamera5;
        /// <summary>
        /// Provides access to the underlying input action "Camera/CustomCamera6".
        /// </summary>
        public InputAction @CustomCamera6 => m_Wrapper.m_Camera_CustomCamera6;
        /// <summary>
        /// Provides access to the underlying input action "Camera/ZoomRelativeAxis".
        /// </summary>
        public InputAction @ZoomRelativeAxis => m_Wrapper.m_Camera_ZoomRelativeAxis;
        /// <summary>
        /// Provides access to the underlying input action "Camera/TimeScaleRelative".
        /// </summary>
        public InputAction @TimeScaleRelative => m_Wrapper.m_Camera_TimeScaleRelative;
        /// <summary>
        /// Provides access to the underlying input action "Camera/PauseTime".
        /// </summary>
        public InputAction @PauseTime => m_Wrapper.m_Camera_PauseTime;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="CameraActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="CameraActions" />
        public void AddCallbacks(ICameraActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
            @Rotate.started += instance.OnRotate;
            @Rotate.performed += instance.OnRotate;
            @Rotate.canceled += instance.OnRotate;
            @MoveHorizontal.started += instance.OnMoveHorizontal;
            @MoveHorizontal.performed += instance.OnMoveHorizontal;
            @MoveHorizontal.canceled += instance.OnMoveHorizontal;
            @MoveVertical.started += instance.OnMoveVertical;
            @MoveVertical.performed += instance.OnMoveVertical;
            @MoveVertical.canceled += instance.OnMoveVertical;
            @ResetRotation.started += instance.OnResetRotation;
            @ResetRotation.performed += instance.OnResetRotation;
            @ResetRotation.canceled += instance.OnResetRotation;
            @FreeLook.started += instance.OnFreeLook;
            @FreeLook.performed += instance.OnFreeLook;
            @FreeLook.canceled += instance.OnFreeLook;
            @ToggleAim.started += instance.OnToggleAim;
            @ToggleAim.performed += instance.OnToggleAim;
            @ToggleAim.canceled += instance.OnToggleAim;
            @HoldAim.started += instance.OnHoldAim;
            @HoldAim.performed += instance.OnHoldAim;
            @HoldAim.canceled += instance.OnHoldAim;
            @ToggleViewMode.started += instance.OnToggleViewMode;
            @ToggleViewMode.performed += instance.OnToggleViewMode;
            @ToggleViewMode.canceled += instance.OnToggleViewMode;
            @ToggleDynamic.started += instance.OnToggleDynamic;
            @ToggleDynamic.performed += instance.OnToggleDynamic;
            @ToggleDynamic.canceled += instance.OnToggleDynamic;
            @LookBehind.started += instance.OnLookBehind;
            @LookBehind.performed += instance.OnLookBehind;
            @LookBehind.canceled += instance.OnLookBehind;
            @Unlock.started += instance.OnUnlock;
            @Unlock.performed += instance.OnUnlock;
            @Unlock.canceled += instance.OnUnlock;
            @Speed.started += instance.OnSpeed;
            @Speed.performed += instance.OnSpeed;
            @Speed.canceled += instance.OnSpeed;
            @MoveAtMaxSpeed.started += instance.OnMoveAtMaxSpeed;
            @MoveAtMaxSpeed.performed += instance.OnMoveAtMaxSpeed;
            @MoveAtMaxSpeed.canceled += instance.OnMoveAtMaxSpeed;
            @CustomCamera1.started += instance.OnCustomCamera1;
            @CustomCamera1.performed += instance.OnCustomCamera1;
            @CustomCamera1.canceled += instance.OnCustomCamera1;
            @CustomCamera2.started += instance.OnCustomCamera2;
            @CustomCamera2.performed += instance.OnCustomCamera2;
            @CustomCamera2.canceled += instance.OnCustomCamera2;
            @CustomCamera3.started += instance.OnCustomCamera3;
            @CustomCamera3.performed += instance.OnCustomCamera3;
            @CustomCamera3.canceled += instance.OnCustomCamera3;
            @CustomCamera4.started += instance.OnCustomCamera4;
            @CustomCamera4.performed += instance.OnCustomCamera4;
            @CustomCamera4.canceled += instance.OnCustomCamera4;
            @CustomCamera5.started += instance.OnCustomCamera5;
            @CustomCamera5.performed += instance.OnCustomCamera5;
            @CustomCamera5.canceled += instance.OnCustomCamera5;
            @CustomCamera6.started += instance.OnCustomCamera6;
            @CustomCamera6.performed += instance.OnCustomCamera6;
            @CustomCamera6.canceled += instance.OnCustomCamera6;
            @ZoomRelativeAxis.started += instance.OnZoomRelativeAxis;
            @ZoomRelativeAxis.performed += instance.OnZoomRelativeAxis;
            @ZoomRelativeAxis.canceled += instance.OnZoomRelativeAxis;
            @TimeScaleRelative.started += instance.OnTimeScaleRelative;
            @TimeScaleRelative.performed += instance.OnTimeScaleRelative;
            @TimeScaleRelative.canceled += instance.OnTimeScaleRelative;
            @PauseTime.started += instance.OnPauseTime;
            @PauseTime.performed += instance.OnPauseTime;
            @PauseTime.canceled += instance.OnPauseTime;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="CameraActions" />
        private void UnregisterCallbacks(ICameraActions instance)
        {
            @Rotate.started -= instance.OnRotate;
            @Rotate.performed -= instance.OnRotate;
            @Rotate.canceled -= instance.OnRotate;
            @MoveHorizontal.started -= instance.OnMoveHorizontal;
            @MoveHorizontal.performed -= instance.OnMoveHorizontal;
            @MoveHorizontal.canceled -= instance.OnMoveHorizontal;
            @MoveVertical.started -= instance.OnMoveVertical;
            @MoveVertical.performed -= instance.OnMoveVertical;
            @MoveVertical.canceled -= instance.OnMoveVertical;
            @ResetRotation.started -= instance.OnResetRotation;
            @ResetRotation.performed -= instance.OnResetRotation;
            @ResetRotation.canceled -= instance.OnResetRotation;
            @FreeLook.started -= instance.OnFreeLook;
            @FreeLook.performed -= instance.OnFreeLook;
            @FreeLook.canceled -= instance.OnFreeLook;
            @ToggleAim.started -= instance.OnToggleAim;
            @ToggleAim.performed -= instance.OnToggleAim;
            @ToggleAim.canceled -= instance.OnToggleAim;
            @HoldAim.started -= instance.OnHoldAim;
            @HoldAim.performed -= instance.OnHoldAim;
            @HoldAim.canceled -= instance.OnHoldAim;
            @ToggleViewMode.started -= instance.OnToggleViewMode;
            @ToggleViewMode.performed -= instance.OnToggleViewMode;
            @ToggleViewMode.canceled -= instance.OnToggleViewMode;
            @ToggleDynamic.started -= instance.OnToggleDynamic;
            @ToggleDynamic.performed -= instance.OnToggleDynamic;
            @ToggleDynamic.canceled -= instance.OnToggleDynamic;
            @LookBehind.started -= instance.OnLookBehind;
            @LookBehind.performed -= instance.OnLookBehind;
            @LookBehind.canceled -= instance.OnLookBehind;
            @Unlock.started -= instance.OnUnlock;
            @Unlock.performed -= instance.OnUnlock;
            @Unlock.canceled -= instance.OnUnlock;
            @Speed.started -= instance.OnSpeed;
            @Speed.performed -= instance.OnSpeed;
            @Speed.canceled -= instance.OnSpeed;
            @MoveAtMaxSpeed.started -= instance.OnMoveAtMaxSpeed;
            @MoveAtMaxSpeed.performed -= instance.OnMoveAtMaxSpeed;
            @MoveAtMaxSpeed.canceled -= instance.OnMoveAtMaxSpeed;
            @CustomCamera1.started -= instance.OnCustomCamera1;
            @CustomCamera1.performed -= instance.OnCustomCamera1;
            @CustomCamera1.canceled -= instance.OnCustomCamera1;
            @CustomCamera2.started -= instance.OnCustomCamera2;
            @CustomCamera2.performed -= instance.OnCustomCamera2;
            @CustomCamera2.canceled -= instance.OnCustomCamera2;
            @CustomCamera3.started -= instance.OnCustomCamera3;
            @CustomCamera3.performed -= instance.OnCustomCamera3;
            @CustomCamera3.canceled -= instance.OnCustomCamera3;
            @CustomCamera4.started -= instance.OnCustomCamera4;
            @CustomCamera4.performed -= instance.OnCustomCamera4;
            @CustomCamera4.canceled -= instance.OnCustomCamera4;
            @CustomCamera5.started -= instance.OnCustomCamera5;
            @CustomCamera5.performed -= instance.OnCustomCamera5;
            @CustomCamera5.canceled -= instance.OnCustomCamera5;
            @CustomCamera6.started -= instance.OnCustomCamera6;
            @CustomCamera6.performed -= instance.OnCustomCamera6;
            @CustomCamera6.canceled -= instance.OnCustomCamera6;
            @ZoomRelativeAxis.started -= instance.OnZoomRelativeAxis;
            @ZoomRelativeAxis.performed -= instance.OnZoomRelativeAxis;
            @ZoomRelativeAxis.canceled -= instance.OnZoomRelativeAxis;
            @TimeScaleRelative.started -= instance.OnTimeScaleRelative;
            @TimeScaleRelative.performed -= instance.OnTimeScaleRelative;
            @TimeScaleRelative.canceled -= instance.OnTimeScaleRelative;
            @PauseTime.started -= instance.OnPauseTime;
            @PauseTime.performed -= instance.OnPauseTime;
            @PauseTime.canceled -= instance.OnPauseTime;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="CameraActions.UnregisterCallbacks(ICameraActions)" />.
        /// </summary>
        /// <seealso cref="CameraActions.UnregisterCallbacks(ICameraActions)" />
        public void RemoveCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="CameraActions.AddCallbacks(ICameraActions)" />
        /// <seealso cref="CameraActions.RemoveCallbacks(ICameraActions)" />
        /// <seealso cref="CameraActions.UnregisterCallbacks(ICameraActions)" />
        public void SetCallbacks(ICameraActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="CameraActions" /> instance referencing this action map.
    /// </summary>
    public CameraActions @Camera => new CameraActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_Menu_OpenPauseScreen;
    private readonly InputAction m_Menu_HideUI;
    private readonly InputAction m_Menu_CamEditor;
    private readonly InputAction m_Menu_PhotoMode;
    private readonly InputAction m_Menu_Screenshot;
    private readonly InputAction m_Menu_NextSquadron;
    private readonly InputAction m_Menu_PreviousSquadron;
    private readonly InputAction m_Menu_NextWing;
    private readonly InputAction m_Menu_PreviousWing;
    /// <summary>
    /// Provides access to input actions defined in input action map "Menu".
    /// </summary>
    public struct MenuActions
    {
        private @Actions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public MenuActions(@Actions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Menu/OpenPauseScreen".
        /// </summary>
        public InputAction @OpenPauseScreen => m_Wrapper.m_Menu_OpenPauseScreen;
        /// <summary>
        /// Provides access to the underlying input action "Menu/HideUI".
        /// </summary>
        public InputAction @HideUI => m_Wrapper.m_Menu_HideUI;
        /// <summary>
        /// Provides access to the underlying input action "Menu/CamEditor".
        /// </summary>
        public InputAction @CamEditor => m_Wrapper.m_Menu_CamEditor;
        /// <summary>
        /// Provides access to the underlying input action "Menu/PhotoMode".
        /// </summary>
        public InputAction @PhotoMode => m_Wrapper.m_Menu_PhotoMode;
        /// <summary>
        /// Provides access to the underlying input action "Menu/Screenshot".
        /// </summary>
        public InputAction @Screenshot => m_Wrapper.m_Menu_Screenshot;
        /// <summary>
        /// Provides access to the underlying input action "Menu/NextSquadron".
        /// </summary>
        public InputAction @NextSquadron => m_Wrapper.m_Menu_NextSquadron;
        /// <summary>
        /// Provides access to the underlying input action "Menu/PreviousSquadron".
        /// </summary>
        public InputAction @PreviousSquadron => m_Wrapper.m_Menu_PreviousSquadron;
        /// <summary>
        /// Provides access to the underlying input action "Menu/NextWing".
        /// </summary>
        public InputAction @NextWing => m_Wrapper.m_Menu_NextWing;
        /// <summary>
        /// Provides access to the underlying input action "Menu/PreviousWing".
        /// </summary>
        public InputAction @PreviousWing => m_Wrapper.m_Menu_PreviousWing;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="MenuActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="MenuActions" />
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @OpenPauseScreen.started += instance.OnOpenPauseScreen;
            @OpenPauseScreen.performed += instance.OnOpenPauseScreen;
            @OpenPauseScreen.canceled += instance.OnOpenPauseScreen;
            @HideUI.started += instance.OnHideUI;
            @HideUI.performed += instance.OnHideUI;
            @HideUI.canceled += instance.OnHideUI;
            @CamEditor.started += instance.OnCamEditor;
            @CamEditor.performed += instance.OnCamEditor;
            @CamEditor.canceled += instance.OnCamEditor;
            @PhotoMode.started += instance.OnPhotoMode;
            @PhotoMode.performed += instance.OnPhotoMode;
            @PhotoMode.canceled += instance.OnPhotoMode;
            @Screenshot.started += instance.OnScreenshot;
            @Screenshot.performed += instance.OnScreenshot;
            @Screenshot.canceled += instance.OnScreenshot;
            @NextSquadron.started += instance.OnNextSquadron;
            @NextSquadron.performed += instance.OnNextSquadron;
            @NextSquadron.canceled += instance.OnNextSquadron;
            @PreviousSquadron.started += instance.OnPreviousSquadron;
            @PreviousSquadron.performed += instance.OnPreviousSquadron;
            @PreviousSquadron.canceled += instance.OnPreviousSquadron;
            @NextWing.started += instance.OnNextWing;
            @NextWing.performed += instance.OnNextWing;
            @NextWing.canceled += instance.OnNextWing;
            @PreviousWing.started += instance.OnPreviousWing;
            @PreviousWing.performed += instance.OnPreviousWing;
            @PreviousWing.canceled += instance.OnPreviousWing;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="MenuActions" />
        private void UnregisterCallbacks(IMenuActions instance)
        {
            @OpenPauseScreen.started -= instance.OnOpenPauseScreen;
            @OpenPauseScreen.performed -= instance.OnOpenPauseScreen;
            @OpenPauseScreen.canceled -= instance.OnOpenPauseScreen;
            @HideUI.started -= instance.OnHideUI;
            @HideUI.performed -= instance.OnHideUI;
            @HideUI.canceled -= instance.OnHideUI;
            @CamEditor.started -= instance.OnCamEditor;
            @CamEditor.performed -= instance.OnCamEditor;
            @CamEditor.canceled -= instance.OnCamEditor;
            @PhotoMode.started -= instance.OnPhotoMode;
            @PhotoMode.performed -= instance.OnPhotoMode;
            @PhotoMode.canceled -= instance.OnPhotoMode;
            @Screenshot.started -= instance.OnScreenshot;
            @Screenshot.performed -= instance.OnScreenshot;
            @Screenshot.canceled -= instance.OnScreenshot;
            @NextSquadron.started -= instance.OnNextSquadron;
            @NextSquadron.performed -= instance.OnNextSquadron;
            @NextSquadron.canceled -= instance.OnNextSquadron;
            @PreviousSquadron.started -= instance.OnPreviousSquadron;
            @PreviousSquadron.performed -= instance.OnPreviousSquadron;
            @PreviousSquadron.canceled -= instance.OnPreviousSquadron;
            @NextWing.started -= instance.OnNextWing;
            @NextWing.performed -= instance.OnNextWing;
            @NextWing.canceled -= instance.OnNextWing;
            @PreviousWing.started -= instance.OnPreviousWing;
            @PreviousWing.performed -= instance.OnPreviousWing;
            @PreviousWing.canceled -= instance.OnPreviousWing;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="MenuActions.UnregisterCallbacks(IMenuActions)" />.
        /// </summary>
        /// <seealso cref="MenuActions.UnregisterCallbacks(IMenuActions)" />
        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="MenuActions.AddCallbacks(IMenuActions)" />
        /// <seealso cref="MenuActions.RemoveCallbacks(IMenuActions)" />
        /// <seealso cref="MenuActions.UnregisterCallbacks(IMenuActions)" />
        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="MenuActions" /> instance referencing this action map.
    /// </summary>
    public MenuActions @Menu => new MenuActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Pilot" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="PilotActions.AddCallbacks(IPilotActions)" />
    /// <seealso cref="PilotActions.RemoveCallbacks(IPilotActions)" />
    public interface IPilotActions
    {
        /// <summary>
        /// Method invoked when associated input action "Pitch" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPitch(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Roll" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRoll(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Rudder" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRudder(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ThrottleRelative" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnThrottleRelative(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ThrottleRaw" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnThrottleRaw(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "FlapsRelative" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnFlapsRelative(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "FlapsRaw" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnFlapsRaw(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "FireGuns" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnFireGuns(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "FirePrimaries" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnFirePrimaries(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "FireSecondaries" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnFireSecondaries(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Bomb" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBomb(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Rocket" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRocket(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Brake" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBrake(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "EngineToggle" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnEngineToggle(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Canopy" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCanopy(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "BombBay" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBombBay(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Airbrakes" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAirbrakes(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LandingGear" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLandingGear(InputAction.CallbackContext context);
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Gunner" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="GunnerActions.AddCallbacks(IGunnerActions)" />
    /// <seealso cref="GunnerActions.RemoveCallbacks(IGunnerActions)" />
    public interface IGunnerActions
    {
        /// <summary>
        /// Method invoked when associated input action "Fire" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnFire(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RotateHorizontal" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRotateHorizontal(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RotateVertical" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRotateVertical(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpecialAxis" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpecialAxis(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Hydraulics" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnHydraulics(InputAction.CallbackContext context);
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Bomber" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="BomberActions.AddCallbacks(IBomberActions)" />
    /// <seealso cref="BomberActions.RemoveCallbacks(IBomberActions)" />
    public interface IBomberActions
    {
        /// <summary>
        /// Method invoked when associated input action "RotateSightView" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRotateSightView(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Rudder" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRudder(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "BombSightMode" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBombSightMode(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Interval" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnInterval(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Quantity" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnQuantity(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Bomb" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBomb(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "BombBay" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBombBay(InputAction.CallbackContext context);
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "AnySeat" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="AnySeatActions.AddCallbacks(IAnySeatActions)" />
    /// <seealso cref="AnySeatActions.RemoveCallbacks(IAnySeatActions)" />
    public interface IAnySeatActions
    {
        /// <summary>
        /// Method invoked when associated input action "Reload" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnReload(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "BailOut" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBailOut(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SwitchSeat" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSwitchSeat(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ScrollWheel" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnScrollWheel(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CycleCrew" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCycleCrew(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "NextCrew" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnNextCrew(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "PreviousCrew" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPreviousCrew(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ToBombardier" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToBombardier(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Pilot" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPilot(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew2" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew2(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew3" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew3(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew4" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew4(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew5" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew5(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew6" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew6(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew7" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew7(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew8" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew8(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew9" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew9(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew10" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew10(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew11" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew11(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Crew12" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCrew12(InputAction.CallbackContext context);
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "ActionWheel" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="ActionWheelActions.AddCallbacks(IActionWheelActions)" />
    /// <seealso cref="ActionWheelActions.RemoveCallbacks(IActionWheelActions)" />
    public interface IActionWheelActions
    {
        /// <summary>
        /// Method invoked when associated input action "ToggleWheel" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleWheel(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Navigate" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnNavigate(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Back" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnBack(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Option1" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOption1(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Option2" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOption2(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Option3" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOption3(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Option4" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOption4(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Option5" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOption5(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Option6" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOption6(InputAction.CallbackContext context);
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Camera" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="CameraActions.AddCallbacks(ICameraActions)" />
    /// <seealso cref="CameraActions.RemoveCallbacks(ICameraActions)" />
    public interface ICameraActions
    {
        /// <summary>
        /// Method invoked when associated input action "Rotate" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRotate(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MoveHorizontal" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMoveHorizontal(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MoveVertical" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMoveVertical(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ResetRotation" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnResetRotation(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "FreeLook" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnFreeLook(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ToggleAim" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleAim(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "HoldAim" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnHoldAim(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ToggleViewMode" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleViewMode(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ToggleDynamic" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleDynamic(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LookBehind" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLookBehind(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Unlock" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnUnlock(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Speed" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpeed(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MoveAtMaxSpeed" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMoveAtMaxSpeed(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CustomCamera1" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCustomCamera1(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CustomCamera2" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCustomCamera2(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CustomCamera3" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCustomCamera3(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CustomCamera4" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCustomCamera4(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CustomCamera5" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCustomCamera5(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CustomCamera6" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCustomCamera6(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ZoomRelativeAxis" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnZoomRelativeAxis(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "TimeScaleRelative" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnTimeScaleRelative(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "PauseTime" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPauseTime(InputAction.CallbackContext context);
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Menu" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="MenuActions.AddCallbacks(IMenuActions)" />
    /// <seealso cref="MenuActions.RemoveCallbacks(IMenuActions)" />
    public interface IMenuActions
    {
        /// <summary>
        /// Method invoked when associated input action "OpenPauseScreen" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOpenPauseScreen(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "HideUI" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnHideUI(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CamEditor" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCamEditor(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "PhotoMode" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPhotoMode(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Screenshot" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnScreenshot(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "NextSquadron" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnNextSquadron(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "PreviousSquadron" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPreviousSquadron(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "NextWing" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnNextWing(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "PreviousWing" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPreviousWing(InputAction.CallbackContext context);
    }
}
